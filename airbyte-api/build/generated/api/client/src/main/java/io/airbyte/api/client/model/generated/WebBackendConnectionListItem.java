/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.airbyte.api.client.model.generated.ConnectionScheduleData;
import io.airbyte.api.client.model.generated.ConnectionScheduleType;
import io.airbyte.api.client.model.generated.ConnectionStatus;
import io.airbyte.api.client.model.generated.DestinationSnippetRead;
import io.airbyte.api.client.model.generated.JobStatus;
import io.airbyte.api.client.model.generated.SchemaChange;
import io.airbyte.api.client.model.generated.SourceSnippetRead;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Information about a connection that shows up in the connection list view.
 */
@ApiModel(description = "Information about a connection that shows up in the connection list view.")
@JsonPropertyOrder({
  WebBackendConnectionListItem.JSON_PROPERTY_CONNECTION_ID,
  WebBackendConnectionListItem.JSON_PROPERTY_NAME,
  WebBackendConnectionListItem.JSON_PROPERTY_SCHEDULE_TYPE,
  WebBackendConnectionListItem.JSON_PROPERTY_SCHEDULE_DATA,
  WebBackendConnectionListItem.JSON_PROPERTY_STATUS,
  WebBackendConnectionListItem.JSON_PROPERTY_SOURCE,
  WebBackendConnectionListItem.JSON_PROPERTY_DESTINATION,
  WebBackendConnectionListItem.JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT,
  WebBackendConnectionListItem.JSON_PROPERTY_LATEST_SYNC_JOB_STATUS,
  WebBackendConnectionListItem.JSON_PROPERTY_IS_SYNCING,
  WebBackendConnectionListItem.JSON_PROPERTY_SCHEMA_CHANGE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class WebBackendConnectionListItem {
  public static final String JSON_PROPERTY_CONNECTION_ID = "connectionId";
  private UUID connectionId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SCHEDULE_TYPE = "scheduleType";
  private ConnectionScheduleType scheduleType;

  public static final String JSON_PROPERTY_SCHEDULE_DATA = "scheduleData";
  private ConnectionScheduleData scheduleData;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ConnectionStatus status;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private SourceSnippetRead source;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private DestinationSnippetRead destination;

  public static final String JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT = "latestSyncJobCreatedAt";
  private Long latestSyncJobCreatedAt;

  public static final String JSON_PROPERTY_LATEST_SYNC_JOB_STATUS = "latestSyncJobStatus";
  private JobStatus latestSyncJobStatus;

  public static final String JSON_PROPERTY_IS_SYNCING = "isSyncing";
  private Boolean isSyncing;

  public static final String JSON_PROPERTY_SCHEMA_CHANGE = "schemaChange";
  private SchemaChange schemaChange;

  public WebBackendConnectionListItem() { 
  }

  public WebBackendConnectionListItem connectionId(UUID connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConnectionId() {
    return connectionId;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectionId(UUID connectionId) {
    this.connectionId = connectionId;
  }


  public WebBackendConnectionListItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public WebBackendConnectionListItem scheduleType(ConnectionScheduleType scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Get scheduleType
   * @return scheduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionScheduleType getScheduleType() {
    return scheduleType;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleType(ConnectionScheduleType scheduleType) {
    this.scheduleType = scheduleType;
  }


  public WebBackendConnectionListItem scheduleData(ConnectionScheduleData scheduleData) {
    this.scheduleData = scheduleData;
    return this;
  }

   /**
   * Get scheduleData
   * @return scheduleData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionScheduleData getScheduleData() {
    return scheduleData;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleData(ConnectionScheduleData scheduleData) {
    this.scheduleData = scheduleData;
  }


  public WebBackendConnectionListItem status(ConnectionStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectionStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(ConnectionStatus status) {
    this.status = status;
  }


  public WebBackendConnectionListItem source(SourceSnippetRead source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SourceSnippetRead getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(SourceSnippetRead source) {
    this.source = source;
  }


  public WebBackendConnectionListItem destination(DestinationSnippetRead destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DestinationSnippetRead getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(DestinationSnippetRead destination) {
    this.destination = destination;
  }


  public WebBackendConnectionListItem latestSyncJobCreatedAt(Long latestSyncJobCreatedAt) {
    this.latestSyncJobCreatedAt = latestSyncJobCreatedAt;
    return this;
  }

   /**
   * epoch time of the latest sync job. null if no sync job has taken place.
   * @return latestSyncJobCreatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "epoch time of the latest sync job. null if no sync job has taken place.")
  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLatestSyncJobCreatedAt() {
    return latestSyncJobCreatedAt;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestSyncJobCreatedAt(Long latestSyncJobCreatedAt) {
    this.latestSyncJobCreatedAt = latestSyncJobCreatedAt;
  }


  public WebBackendConnectionListItem latestSyncJobStatus(JobStatus latestSyncJobStatus) {
    this.latestSyncJobStatus = latestSyncJobStatus;
    return this;
  }

   /**
   * Get latestSyncJobStatus
   * @return latestSyncJobStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobStatus getLatestSyncJobStatus() {
    return latestSyncJobStatus;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestSyncJobStatus(JobStatus latestSyncJobStatus) {
    this.latestSyncJobStatus = latestSyncJobStatus;
  }


  public WebBackendConnectionListItem isSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
    return this;
  }

   /**
   * Get isSyncing
   * @return isSyncing
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_SYNCING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSyncing() {
    return isSyncing;
  }


  @JsonProperty(JSON_PROPERTY_IS_SYNCING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
  }


  public WebBackendConnectionListItem schemaChange(SchemaChange schemaChange) {
    this.schemaChange = schemaChange;
    return this;
  }

   /**
   * Get schemaChange
   * @return schemaChange
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEMA_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SchemaChange getSchemaChange() {
    return schemaChange;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchemaChange(SchemaChange schemaChange) {
    this.schemaChange = schemaChange;
  }


  /**
   * Return true if this WebBackendConnectionListItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebBackendConnectionListItem webBackendConnectionListItem = (WebBackendConnectionListItem) o;
    return Objects.equals(this.connectionId, webBackendConnectionListItem.connectionId) &&
        Objects.equals(this.name, webBackendConnectionListItem.name) &&
        Objects.equals(this.scheduleType, webBackendConnectionListItem.scheduleType) &&
        Objects.equals(this.scheduleData, webBackendConnectionListItem.scheduleData) &&
        Objects.equals(this.status, webBackendConnectionListItem.status) &&
        Objects.equals(this.source, webBackendConnectionListItem.source) &&
        Objects.equals(this.destination, webBackendConnectionListItem.destination) &&
        Objects.equals(this.latestSyncJobCreatedAt, webBackendConnectionListItem.latestSyncJobCreatedAt) &&
        Objects.equals(this.latestSyncJobStatus, webBackendConnectionListItem.latestSyncJobStatus) &&
        Objects.equals(this.isSyncing, webBackendConnectionListItem.isSyncing) &&
        Objects.equals(this.schemaChange, webBackendConnectionListItem.schemaChange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionId, name, scheduleType, scheduleData, status, source, destination, latestSyncJobCreatedAt, latestSyncJobStatus, isSyncing, schemaChange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebBackendConnectionListItem {\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleData: ").append(toIndentedString(scheduleData)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    latestSyncJobCreatedAt: ").append(toIndentedString(latestSyncJobCreatedAt)).append("\n");
    sb.append("    latestSyncJobStatus: ").append(toIndentedString(latestSyncJobStatus)).append("\n");
    sb.append("    isSyncing: ").append(toIndentedString(isSyncing)).append("\n");
    sb.append("    schemaChange: ").append(toIndentedString(schemaChange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

