/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AttemptStats
 */
@JsonPropertyOrder({
  AttemptStats.JSON_PROPERTY_RECORDS_EMITTED,
  AttemptStats.JSON_PROPERTY_BYTES_EMITTED,
  AttemptStats.JSON_PROPERTY_STATE_MESSAGES_EMITTED,
  AttemptStats.JSON_PROPERTY_RECORDS_COMMITTED,
  AttemptStats.JSON_PROPERTY_ESTIMATED_RECORDS,
  AttemptStats.JSON_PROPERTY_ESTIMATED_BYTES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class AttemptStats {
  public static final String JSON_PROPERTY_RECORDS_EMITTED = "recordsEmitted";
  private Long recordsEmitted;

  public static final String JSON_PROPERTY_BYTES_EMITTED = "bytesEmitted";
  private Long bytesEmitted;

  public static final String JSON_PROPERTY_STATE_MESSAGES_EMITTED = "stateMessagesEmitted";
  private Long stateMessagesEmitted;

  public static final String JSON_PROPERTY_RECORDS_COMMITTED = "recordsCommitted";
  private Long recordsCommitted;

  public static final String JSON_PROPERTY_ESTIMATED_RECORDS = "estimatedRecords";
  private Long estimatedRecords;

  public static final String JSON_PROPERTY_ESTIMATED_BYTES = "estimatedBytes";
  private Long estimatedBytes;

  public AttemptStats() { 
  }

  public AttemptStats recordsEmitted(Long recordsEmitted) {
    this.recordsEmitted = recordsEmitted;
    return this;
  }

   /**
   * Get recordsEmitted
   * @return recordsEmitted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECORDS_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRecordsEmitted() {
    return recordsEmitted;
  }


  @JsonProperty(JSON_PROPERTY_RECORDS_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordsEmitted(Long recordsEmitted) {
    this.recordsEmitted = recordsEmitted;
  }


  public AttemptStats bytesEmitted(Long bytesEmitted) {
    this.bytesEmitted = bytesEmitted;
    return this;
  }

   /**
   * Get bytesEmitted
   * @return bytesEmitted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BYTES_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBytesEmitted() {
    return bytesEmitted;
  }


  @JsonProperty(JSON_PROPERTY_BYTES_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytesEmitted(Long bytesEmitted) {
    this.bytesEmitted = bytesEmitted;
  }


  public AttemptStats stateMessagesEmitted(Long stateMessagesEmitted) {
    this.stateMessagesEmitted = stateMessagesEmitted;
    return this;
  }

   /**
   * Get stateMessagesEmitted
   * @return stateMessagesEmitted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE_MESSAGES_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStateMessagesEmitted() {
    return stateMessagesEmitted;
  }


  @JsonProperty(JSON_PROPERTY_STATE_MESSAGES_EMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateMessagesEmitted(Long stateMessagesEmitted) {
    this.stateMessagesEmitted = stateMessagesEmitted;
  }


  public AttemptStats recordsCommitted(Long recordsCommitted) {
    this.recordsCommitted = recordsCommitted;
    return this;
  }

   /**
   * Get recordsCommitted
   * @return recordsCommitted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECORDS_COMMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRecordsCommitted() {
    return recordsCommitted;
  }


  @JsonProperty(JSON_PROPERTY_RECORDS_COMMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordsCommitted(Long recordsCommitted) {
    this.recordsCommitted = recordsCommitted;
  }


  public AttemptStats estimatedRecords(Long estimatedRecords) {
    this.estimatedRecords = estimatedRecords;
    return this;
  }

   /**
   * Get estimatedRecords
   * @return estimatedRecords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ESTIMATED_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEstimatedRecords() {
    return estimatedRecords;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_RECORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedRecords(Long estimatedRecords) {
    this.estimatedRecords = estimatedRecords;
  }


  public AttemptStats estimatedBytes(Long estimatedBytes) {
    this.estimatedBytes = estimatedBytes;
    return this;
  }

   /**
   * Get estimatedBytes
   * @return estimatedBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ESTIMATED_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEstimatedBytes() {
    return estimatedBytes;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedBytes(Long estimatedBytes) {
    this.estimatedBytes = estimatedBytes;
  }


  /**
   * Return true if this AttemptStats object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttemptStats attemptStats = (AttemptStats) o;
    return Objects.equals(this.recordsEmitted, attemptStats.recordsEmitted) &&
        Objects.equals(this.bytesEmitted, attemptStats.bytesEmitted) &&
        Objects.equals(this.stateMessagesEmitted, attemptStats.stateMessagesEmitted) &&
        Objects.equals(this.recordsCommitted, attemptStats.recordsCommitted) &&
        Objects.equals(this.estimatedRecords, attemptStats.estimatedRecords) &&
        Objects.equals(this.estimatedBytes, attemptStats.estimatedBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordsEmitted, bytesEmitted, stateMessagesEmitted, recordsCommitted, estimatedRecords, estimatedBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttemptStats {\n");
    sb.append("    recordsEmitted: ").append(toIndentedString(recordsEmitted)).append("\n");
    sb.append("    bytesEmitted: ").append(toIndentedString(bytesEmitted)).append("\n");
    sb.append("    stateMessagesEmitted: ").append(toIndentedString(stateMessagesEmitted)).append("\n");
    sb.append("    recordsCommitted: ").append(toIndentedString(recordsCommitted)).append("\n");
    sb.append("    estimatedRecords: ").append(toIndentedString(estimatedRecords)).append("\n");
    sb.append("    estimatedBytes: ").append(toIndentedString(estimatedBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

