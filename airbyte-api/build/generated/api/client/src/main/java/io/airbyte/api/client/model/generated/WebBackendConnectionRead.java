/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.airbyte.api.client.model.generated.AirbyteCatalog;
import io.airbyte.api.client.model.generated.CatalogDiff;
import io.airbyte.api.client.model.generated.ConnectionSchedule;
import io.airbyte.api.client.model.generated.ConnectionScheduleData;
import io.airbyte.api.client.model.generated.ConnectionScheduleType;
import io.airbyte.api.client.model.generated.ConnectionStatus;
import io.airbyte.api.client.model.generated.DestinationRead;
import io.airbyte.api.client.model.generated.Geography;
import io.airbyte.api.client.model.generated.JobStatus;
import io.airbyte.api.client.model.generated.NamespaceDefinitionType;
import io.airbyte.api.client.model.generated.NonBreakingChangesPreference;
import io.airbyte.api.client.model.generated.OperationRead;
import io.airbyte.api.client.model.generated.ResourceRequirements;
import io.airbyte.api.client.model.generated.SchemaChange;
import io.airbyte.api.client.model.generated.SourceRead;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * WebBackendConnectionRead
 */
@JsonPropertyOrder({
  WebBackendConnectionRead.JSON_PROPERTY_CONNECTION_ID,
  WebBackendConnectionRead.JSON_PROPERTY_NAME,
  WebBackendConnectionRead.JSON_PROPERTY_NAMESPACE_DEFINITION,
  WebBackendConnectionRead.JSON_PROPERTY_NAMESPACE_FORMAT,
  WebBackendConnectionRead.JSON_PROPERTY_PREFIX,
  WebBackendConnectionRead.JSON_PROPERTY_SOURCE_ID,
  WebBackendConnectionRead.JSON_PROPERTY_DESTINATION_ID,
  WebBackendConnectionRead.JSON_PROPERTY_SYNC_CATALOG,
  WebBackendConnectionRead.JSON_PROPERTY_SCHEDULE,
  WebBackendConnectionRead.JSON_PROPERTY_SCHEDULE_TYPE,
  WebBackendConnectionRead.JSON_PROPERTY_SCHEDULE_DATA,
  WebBackendConnectionRead.JSON_PROPERTY_STATUS,
  WebBackendConnectionRead.JSON_PROPERTY_OPERATION_IDS,
  WebBackendConnectionRead.JSON_PROPERTY_SOURCE,
  WebBackendConnectionRead.JSON_PROPERTY_DESTINATION,
  WebBackendConnectionRead.JSON_PROPERTY_OPERATIONS,
  WebBackendConnectionRead.JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT,
  WebBackendConnectionRead.JSON_PROPERTY_LATEST_SYNC_JOB_STATUS,
  WebBackendConnectionRead.JSON_PROPERTY_IS_SYNCING,
  WebBackendConnectionRead.JSON_PROPERTY_RESOURCE_REQUIREMENTS,
  WebBackendConnectionRead.JSON_PROPERTY_CATALOG_ID,
  WebBackendConnectionRead.JSON_PROPERTY_CATALOG_DIFF,
  WebBackendConnectionRead.JSON_PROPERTY_GEOGRAPHY,
  WebBackendConnectionRead.JSON_PROPERTY_SCHEMA_CHANGE,
  WebBackendConnectionRead.JSON_PROPERTY_NOTIFY_SCHEMA_CHANGES,
  WebBackendConnectionRead.JSON_PROPERTY_NON_BREAKING_CHANGES_PREFERENCE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class WebBackendConnectionRead {
  public static final String JSON_PROPERTY_CONNECTION_ID = "connectionId";
  private UUID connectionId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NAMESPACE_DEFINITION = "namespaceDefinition";
  private NamespaceDefinitionType namespaceDefinition;

  public static final String JSON_PROPERTY_NAMESPACE_FORMAT = "namespaceFormat";
  private String namespaceFormat;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  private UUID sourceId;

  public static final String JSON_PROPERTY_DESTINATION_ID = "destinationId";
  private UUID destinationId;

  public static final String JSON_PROPERTY_SYNC_CATALOG = "syncCatalog";
  private AirbyteCatalog syncCatalog;

  public static final String JSON_PROPERTY_SCHEDULE = "schedule";
  private ConnectionSchedule schedule;

  public static final String JSON_PROPERTY_SCHEDULE_TYPE = "scheduleType";
  private ConnectionScheduleType scheduleType;

  public static final String JSON_PROPERTY_SCHEDULE_DATA = "scheduleData";
  private ConnectionScheduleData scheduleData;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ConnectionStatus status;

  public static final String JSON_PROPERTY_OPERATION_IDS = "operationIds";
  private List<UUID> operationIds = null;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private SourceRead source;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private DestinationRead destination;

  public static final String JSON_PROPERTY_OPERATIONS = "operations";
  private List<OperationRead> operations = null;

  public static final String JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT = "latestSyncJobCreatedAt";
  private Long latestSyncJobCreatedAt;

  public static final String JSON_PROPERTY_LATEST_SYNC_JOB_STATUS = "latestSyncJobStatus";
  private JobStatus latestSyncJobStatus;

  public static final String JSON_PROPERTY_IS_SYNCING = "isSyncing";
  private Boolean isSyncing;

  public static final String JSON_PROPERTY_RESOURCE_REQUIREMENTS = "resourceRequirements";
  private ResourceRequirements resourceRequirements;

  public static final String JSON_PROPERTY_CATALOG_ID = "catalogId";
  private UUID catalogId;

  public static final String JSON_PROPERTY_CATALOG_DIFF = "catalogDiff";
  private CatalogDiff catalogDiff;

  public static final String JSON_PROPERTY_GEOGRAPHY = "geography";
  private Geography geography;

  public static final String JSON_PROPERTY_SCHEMA_CHANGE = "schemaChange";
  private SchemaChange schemaChange;

  public static final String JSON_PROPERTY_NOTIFY_SCHEMA_CHANGES = "notifySchemaChanges";
  private Boolean notifySchemaChanges;

  public static final String JSON_PROPERTY_NON_BREAKING_CHANGES_PREFERENCE = "nonBreakingChangesPreference";
  private NonBreakingChangesPreference nonBreakingChangesPreference;

  public WebBackendConnectionRead() { 
  }

  public WebBackendConnectionRead connectionId(UUID connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConnectionId() {
    return connectionId;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectionId(UUID connectionId) {
    this.connectionId = connectionId;
  }


  public WebBackendConnectionRead name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public WebBackendConnectionRead namespaceDefinition(NamespaceDefinitionType namespaceDefinition) {
    this.namespaceDefinition = namespaceDefinition;
    return this;
  }

   /**
   * Get namespaceDefinition
   * @return namespaceDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAMESPACE_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamespaceDefinitionType getNamespaceDefinition() {
    return namespaceDefinition;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespaceDefinition(NamespaceDefinitionType namespaceDefinition) {
    this.namespaceDefinition = namespaceDefinition;
  }


  public WebBackendConnectionRead namespaceFormat(String namespaceFormat) {
    this.namespaceFormat = namespaceFormat;
    return this;
  }

   /**
   * Used when namespaceDefinition is &#39;customformat&#39;. If blank then behaves like namespaceDefinition &#x3D; &#39;destination&#39;. If \&quot;${SOURCE_NAMESPACE}\&quot; then behaves like namespaceDefinition &#x3D; &#39;source&#39;.
   * @return namespaceFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "${SOURCE_NAMESPACE}", value = "Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.")
  @JsonProperty(JSON_PROPERTY_NAMESPACE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespaceFormat() {
    return namespaceFormat;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespaceFormat(String namespaceFormat) {
    this.namespaceFormat = namespaceFormat;
  }


  public WebBackendConnectionRead prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Prefix that will be prepended to the name of each stream when it is written to the destination.
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Prefix that will be prepended to the name of each stream when it is written to the destination.")
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public WebBackendConnectionRead sourceId(UUID sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceId(UUID sourceId) {
    this.sourceId = sourceId;
  }


  public WebBackendConnectionRead destinationId(UUID destinationId) {
    this.destinationId = destinationId;
    return this;
  }

   /**
   * Get destinationId
   * @return destinationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getDestinationId() {
    return destinationId;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationId(UUID destinationId) {
    this.destinationId = destinationId;
  }


  public WebBackendConnectionRead syncCatalog(AirbyteCatalog syncCatalog) {
    this.syncCatalog = syncCatalog;
    return this;
  }

   /**
   * Get syncCatalog
   * @return syncCatalog
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYNC_CATALOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AirbyteCatalog getSyncCatalog() {
    return syncCatalog;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_CATALOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSyncCatalog(AirbyteCatalog syncCatalog) {
    this.syncCatalog = syncCatalog;
  }


  public WebBackendConnectionRead schedule(ConnectionSchedule schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionSchedule getSchedule() {
    return schedule;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchedule(ConnectionSchedule schedule) {
    this.schedule = schedule;
  }


  public WebBackendConnectionRead scheduleType(ConnectionScheduleType scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Get scheduleType
   * @return scheduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionScheduleType getScheduleType() {
    return scheduleType;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleType(ConnectionScheduleType scheduleType) {
    this.scheduleType = scheduleType;
  }


  public WebBackendConnectionRead scheduleData(ConnectionScheduleData scheduleData) {
    this.scheduleData = scheduleData;
    return this;
  }

   /**
   * Get scheduleData
   * @return scheduleData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionScheduleData getScheduleData() {
    return scheduleData;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleData(ConnectionScheduleData scheduleData) {
    this.scheduleData = scheduleData;
  }


  public WebBackendConnectionRead status(ConnectionStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectionStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(ConnectionStatus status) {
    this.status = status;
  }


  public WebBackendConnectionRead operationIds(List<UUID> operationIds) {
    this.operationIds = operationIds;
    return this;
  }

  public WebBackendConnectionRead addOperationIdsItem(UUID operationIdsItem) {
    if (this.operationIds == null) {
      this.operationIds = new ArrayList<>();
    }
    this.operationIds.add(operationIdsItem);
    return this;
  }

   /**
   * Get operationIds
   * @return operationIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getOperationIds() {
    return operationIds;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperationIds(List<UUID> operationIds) {
    this.operationIds = operationIds;
  }


  public WebBackendConnectionRead source(SourceRead source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SourceRead getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(SourceRead source) {
    this.source = source;
  }


  public WebBackendConnectionRead destination(DestinationRead destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DestinationRead getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(DestinationRead destination) {
    this.destination = destination;
  }


  public WebBackendConnectionRead operations(List<OperationRead> operations) {
    this.operations = operations;
    return this;
  }

  public WebBackendConnectionRead addOperationsItem(OperationRead operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<>();
    }
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OperationRead> getOperations() {
    return operations;
  }


  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperations(List<OperationRead> operations) {
    this.operations = operations;
  }


  public WebBackendConnectionRead latestSyncJobCreatedAt(Long latestSyncJobCreatedAt) {
    this.latestSyncJobCreatedAt = latestSyncJobCreatedAt;
    return this;
  }

   /**
   * epoch time of the latest sync job. null if no sync job has taken place.
   * @return latestSyncJobCreatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "epoch time of the latest sync job. null if no sync job has taken place.")
  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLatestSyncJobCreatedAt() {
    return latestSyncJobCreatedAt;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestSyncJobCreatedAt(Long latestSyncJobCreatedAt) {
    this.latestSyncJobCreatedAt = latestSyncJobCreatedAt;
  }


  public WebBackendConnectionRead latestSyncJobStatus(JobStatus latestSyncJobStatus) {
    this.latestSyncJobStatus = latestSyncJobStatus;
    return this;
  }

   /**
   * Get latestSyncJobStatus
   * @return latestSyncJobStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JobStatus getLatestSyncJobStatus() {
    return latestSyncJobStatus;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_SYNC_JOB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestSyncJobStatus(JobStatus latestSyncJobStatus) {
    this.latestSyncJobStatus = latestSyncJobStatus;
  }


  public WebBackendConnectionRead isSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
    return this;
  }

   /**
   * Get isSyncing
   * @return isSyncing
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_SYNCING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSyncing() {
    return isSyncing;
  }


  @JsonProperty(JSON_PROPERTY_IS_SYNCING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSyncing(Boolean isSyncing) {
    this.isSyncing = isSyncing;
  }


  public WebBackendConnectionRead resourceRequirements(ResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
    return this;
  }

   /**
   * Get resourceRequirements
   * @return resourceRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResourceRequirements getResourceRequirements() {
    return resourceRequirements;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceRequirements(ResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
  }


  public WebBackendConnectionRead catalogId(UUID catalogId) {
    this.catalogId = catalogId;
    return this;
  }

   /**
   * Get catalogId
   * @return catalogId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATALOG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCatalogId() {
    return catalogId;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogId(UUID catalogId) {
    this.catalogId = catalogId;
  }


  public WebBackendConnectionRead catalogDiff(CatalogDiff catalogDiff) {
    this.catalogDiff = catalogDiff;
    return this;
  }

   /**
   * Get catalogDiff
   * @return catalogDiff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATALOG_DIFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CatalogDiff getCatalogDiff() {
    return catalogDiff;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_DIFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogDiff(CatalogDiff catalogDiff) {
    this.catalogDiff = catalogDiff;
  }


  public WebBackendConnectionRead geography(Geography geography) {
    this.geography = geography;
    return this;
  }

   /**
   * Get geography
   * @return geography
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GEOGRAPHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Geography getGeography() {
    return geography;
  }


  @JsonProperty(JSON_PROPERTY_GEOGRAPHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeography(Geography geography) {
    this.geography = geography;
  }


  public WebBackendConnectionRead schemaChange(SchemaChange schemaChange) {
    this.schemaChange = schemaChange;
    return this;
  }

   /**
   * Get schemaChange
   * @return schemaChange
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEMA_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SchemaChange getSchemaChange() {
    return schemaChange;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchemaChange(SchemaChange schemaChange) {
    this.schemaChange = schemaChange;
  }


  public WebBackendConnectionRead notifySchemaChanges(Boolean notifySchemaChanges) {
    this.notifySchemaChanges = notifySchemaChanges;
    return this;
  }

   /**
   * Get notifySchemaChanges
   * @return notifySchemaChanges
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NOTIFY_SCHEMA_CHANGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getNotifySchemaChanges() {
    return notifySchemaChanges;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFY_SCHEMA_CHANGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotifySchemaChanges(Boolean notifySchemaChanges) {
    this.notifySchemaChanges = notifySchemaChanges;
  }


  public WebBackendConnectionRead nonBreakingChangesPreference(NonBreakingChangesPreference nonBreakingChangesPreference) {
    this.nonBreakingChangesPreference = nonBreakingChangesPreference;
    return this;
  }

   /**
   * Get nonBreakingChangesPreference
   * @return nonBreakingChangesPreference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NON_BREAKING_CHANGES_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NonBreakingChangesPreference getNonBreakingChangesPreference() {
    return nonBreakingChangesPreference;
  }


  @JsonProperty(JSON_PROPERTY_NON_BREAKING_CHANGES_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNonBreakingChangesPreference(NonBreakingChangesPreference nonBreakingChangesPreference) {
    this.nonBreakingChangesPreference = nonBreakingChangesPreference;
  }


  /**
   * Return true if this WebBackendConnectionRead object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebBackendConnectionRead webBackendConnectionRead = (WebBackendConnectionRead) o;
    return Objects.equals(this.connectionId, webBackendConnectionRead.connectionId) &&
        Objects.equals(this.name, webBackendConnectionRead.name) &&
        Objects.equals(this.namespaceDefinition, webBackendConnectionRead.namespaceDefinition) &&
        Objects.equals(this.namespaceFormat, webBackendConnectionRead.namespaceFormat) &&
        Objects.equals(this.prefix, webBackendConnectionRead.prefix) &&
        Objects.equals(this.sourceId, webBackendConnectionRead.sourceId) &&
        Objects.equals(this.destinationId, webBackendConnectionRead.destinationId) &&
        Objects.equals(this.syncCatalog, webBackendConnectionRead.syncCatalog) &&
        Objects.equals(this.schedule, webBackendConnectionRead.schedule) &&
        Objects.equals(this.scheduleType, webBackendConnectionRead.scheduleType) &&
        Objects.equals(this.scheduleData, webBackendConnectionRead.scheduleData) &&
        Objects.equals(this.status, webBackendConnectionRead.status) &&
        Objects.equals(this.operationIds, webBackendConnectionRead.operationIds) &&
        Objects.equals(this.source, webBackendConnectionRead.source) &&
        Objects.equals(this.destination, webBackendConnectionRead.destination) &&
        Objects.equals(this.operations, webBackendConnectionRead.operations) &&
        Objects.equals(this.latestSyncJobCreatedAt, webBackendConnectionRead.latestSyncJobCreatedAt) &&
        Objects.equals(this.latestSyncJobStatus, webBackendConnectionRead.latestSyncJobStatus) &&
        Objects.equals(this.isSyncing, webBackendConnectionRead.isSyncing) &&
        Objects.equals(this.resourceRequirements, webBackendConnectionRead.resourceRequirements) &&
        Objects.equals(this.catalogId, webBackendConnectionRead.catalogId) &&
        Objects.equals(this.catalogDiff, webBackendConnectionRead.catalogDiff) &&
        Objects.equals(this.geography, webBackendConnectionRead.geography) &&
        Objects.equals(this.schemaChange, webBackendConnectionRead.schemaChange) &&
        Objects.equals(this.notifySchemaChanges, webBackendConnectionRead.notifySchemaChanges) &&
        Objects.equals(this.nonBreakingChangesPreference, webBackendConnectionRead.nonBreakingChangesPreference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionId, name, namespaceDefinition, namespaceFormat, prefix, sourceId, destinationId, syncCatalog, schedule, scheduleType, scheduleData, status, operationIds, source, destination, operations, latestSyncJobCreatedAt, latestSyncJobStatus, isSyncing, resourceRequirements, catalogId, catalogDiff, geography, schemaChange, notifySchemaChanges, nonBreakingChangesPreference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebBackendConnectionRead {\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespaceDefinition: ").append(toIndentedString(namespaceDefinition)).append("\n");
    sb.append("    namespaceFormat: ").append(toIndentedString(namespaceFormat)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    syncCatalog: ").append(toIndentedString(syncCatalog)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleData: ").append(toIndentedString(scheduleData)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    operationIds: ").append(toIndentedString(operationIds)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    latestSyncJobCreatedAt: ").append(toIndentedString(latestSyncJobCreatedAt)).append("\n");
    sb.append("    latestSyncJobStatus: ").append(toIndentedString(latestSyncJobStatus)).append("\n");
    sb.append("    isSyncing: ").append(toIndentedString(isSyncing)).append("\n");
    sb.append("    resourceRequirements: ").append(toIndentedString(resourceRequirements)).append("\n");
    sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
    sb.append("    catalogDiff: ").append(toIndentedString(catalogDiff)).append("\n");
    sb.append("    geography: ").append(toIndentedString(geography)).append("\n");
    sb.append("    schemaChange: ").append(toIndentedString(schemaChange)).append("\n");
    sb.append("    notifySchemaChanges: ").append(toIndentedString(notifySchemaChanges)).append("\n");
    sb.append("    nonBreakingChangesPreference: ").append(toIndentedString(nonBreakingChangesPreference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

