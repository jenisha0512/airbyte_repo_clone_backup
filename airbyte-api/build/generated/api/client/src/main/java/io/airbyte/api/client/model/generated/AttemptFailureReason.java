/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.airbyte.api.client.model.generated.AttemptFailureOrigin;
import io.airbyte.api.client.model.generated.AttemptFailureType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AttemptFailureReason
 */
@JsonPropertyOrder({
  AttemptFailureReason.JSON_PROPERTY_FAILURE_ORIGIN,
  AttemptFailureReason.JSON_PROPERTY_FAILURE_TYPE,
  AttemptFailureReason.JSON_PROPERTY_EXTERNAL_MESSAGE,
  AttemptFailureReason.JSON_PROPERTY_INTERNAL_MESSAGE,
  AttemptFailureReason.JSON_PROPERTY_STACKTRACE,
  AttemptFailureReason.JSON_PROPERTY_RETRYABLE,
  AttemptFailureReason.JSON_PROPERTY_TIMESTAMP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class AttemptFailureReason {
  public static final String JSON_PROPERTY_FAILURE_ORIGIN = "failureOrigin";
  private AttemptFailureOrigin failureOrigin;

  public static final String JSON_PROPERTY_FAILURE_TYPE = "failureType";
  private AttemptFailureType failureType;

  public static final String JSON_PROPERTY_EXTERNAL_MESSAGE = "externalMessage";
  private String externalMessage;

  public static final String JSON_PROPERTY_INTERNAL_MESSAGE = "internalMessage";
  private String internalMessage;

  public static final String JSON_PROPERTY_STACKTRACE = "stacktrace";
  private String stacktrace;

  public static final String JSON_PROPERTY_RETRYABLE = "retryable";
  private Boolean retryable;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private Long timestamp;

  public AttemptFailureReason() { 
  }

  public AttemptFailureReason failureOrigin(AttemptFailureOrigin failureOrigin) {
    this.failureOrigin = failureOrigin;
    return this;
  }

   /**
   * Get failureOrigin
   * @return failureOrigin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAILURE_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttemptFailureOrigin getFailureOrigin() {
    return failureOrigin;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureOrigin(AttemptFailureOrigin failureOrigin) {
    this.failureOrigin = failureOrigin;
  }


  public AttemptFailureReason failureType(AttemptFailureType failureType) {
    this.failureType = failureType;
    return this;
  }

   /**
   * Get failureType
   * @return failureType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttemptFailureType getFailureType() {
    return failureType;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureType(AttemptFailureType failureType) {
    this.failureType = failureType;
  }


  public AttemptFailureReason externalMessage(String externalMessage) {
    this.externalMessage = externalMessage;
    return this;
  }

   /**
   * Get externalMessage
   * @return externalMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalMessage() {
    return externalMessage;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalMessage(String externalMessage) {
    this.externalMessage = externalMessage;
  }


  public AttemptFailureReason internalMessage(String internalMessage) {
    this.internalMessage = internalMessage;
    return this;
  }

   /**
   * Get internalMessage
   * @return internalMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTERNAL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalMessage() {
    return internalMessage;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalMessage(String internalMessage) {
    this.internalMessage = internalMessage;
  }


  public AttemptFailureReason stacktrace(String stacktrace) {
    this.stacktrace = stacktrace;
    return this;
  }

   /**
   * Get stacktrace
   * @return stacktrace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STACKTRACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStacktrace() {
    return stacktrace;
  }


  @JsonProperty(JSON_PROPERTY_STACKTRACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStacktrace(String stacktrace) {
    this.stacktrace = stacktrace;
  }


  public AttemptFailureReason retryable(Boolean retryable) {
    this.retryable = retryable;
    return this;
  }

   /**
   * True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.
   * @return retryable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.")
  @JsonProperty(JSON_PROPERTY_RETRYABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRetryable() {
    return retryable;
  }


  @JsonProperty(JSON_PROPERTY_RETRYABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetryable(Boolean retryable) {
    this.retryable = retryable;
  }


  public AttemptFailureReason timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }


  /**
   * Return true if this AttemptFailureReason object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttemptFailureReason attemptFailureReason = (AttemptFailureReason) o;
    return Objects.equals(this.failureOrigin, attemptFailureReason.failureOrigin) &&
        Objects.equals(this.failureType, attemptFailureReason.failureType) &&
        Objects.equals(this.externalMessage, attemptFailureReason.externalMessage) &&
        Objects.equals(this.internalMessage, attemptFailureReason.internalMessage) &&
        Objects.equals(this.stacktrace, attemptFailureReason.stacktrace) &&
        Objects.equals(this.retryable, attemptFailureReason.retryable) &&
        Objects.equals(this.timestamp, attemptFailureReason.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureOrigin, failureType, externalMessage, internalMessage, stacktrace, retryable, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttemptFailureReason {\n");
    sb.append("    failureOrigin: ").append(toIndentedString(failureOrigin)).append("\n");
    sb.append("    failureType: ").append(toIndentedString(failureType)).append("\n");
    sb.append("    externalMessage: ").append(toIndentedString(externalMessage)).append("\n");
    sb.append("    internalMessage: ").append(toIndentedString(internalMessage)).append("\n");
    sb.append("    stacktrace: ").append(toIndentedString(stacktrace)).append("\n");
    sb.append("    retryable: ").append(toIndentedString(retryable)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

