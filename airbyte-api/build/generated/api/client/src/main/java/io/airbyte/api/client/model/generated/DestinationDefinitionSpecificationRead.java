/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.airbyte.api.client.model.generated.AdvancedAuth;
import io.airbyte.api.client.model.generated.AuthSpecification;
import io.airbyte.api.client.model.generated.DestinationSyncMode;
import io.airbyte.api.client.model.generated.SynchronousJobRead;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DestinationDefinitionSpecificationRead
 */
@JsonPropertyOrder({
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_DESTINATION_DEFINITION_ID,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_DOCUMENTATION_URL,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_CONNECTION_SPECIFICATION,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_AUTH_SPECIFICATION,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_ADVANCED_AUTH,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_JOB_INFO,
  DestinationDefinitionSpecificationRead.JSON_PROPERTY_SUPPORTED_DESTINATION_SYNC_MODES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class DestinationDefinitionSpecificationRead {
  public static final String JSON_PROPERTY_DESTINATION_DEFINITION_ID = "destinationDefinitionId";
  private UUID destinationDefinitionId;

  public static final String JSON_PROPERTY_DOCUMENTATION_URL = "documentationUrl";
  private String documentationUrl;

  public static final String JSON_PROPERTY_CONNECTION_SPECIFICATION = "connectionSpecification";
  private com.fasterxml.jackson.databind.JsonNode connectionSpecification = null;

  public static final String JSON_PROPERTY_AUTH_SPECIFICATION = "authSpecification";
  private AuthSpecification authSpecification;

  public static final String JSON_PROPERTY_ADVANCED_AUTH = "advancedAuth";
  private AdvancedAuth advancedAuth;

  public static final String JSON_PROPERTY_JOB_INFO = "jobInfo";
  private SynchronousJobRead jobInfo;

  public static final String JSON_PROPERTY_SUPPORTED_DESTINATION_SYNC_MODES = "supportedDestinationSyncModes";
  private List<DestinationSyncMode> supportedDestinationSyncModes = null;

  public DestinationDefinitionSpecificationRead() { 
  }

  public DestinationDefinitionSpecificationRead destinationDefinitionId(UUID destinationDefinitionId) {
    this.destinationDefinitionId = destinationDefinitionId;
    return this;
  }

   /**
   * Get destinationDefinitionId
   * @return destinationDefinitionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESTINATION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getDestinationDefinitionId() {
    return destinationDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestinationDefinitionId(UUID destinationDefinitionId) {
    this.destinationDefinitionId = destinationDefinitionId;
  }


  public DestinationDefinitionSpecificationRead documentationUrl(String documentationUrl) {
    this.documentationUrl = documentationUrl;
    return this;
  }

   /**
   * Get documentationUrl
   * @return documentationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentationUrl() {
    return documentationUrl;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentationUrl(String documentationUrl) {
    this.documentationUrl = documentationUrl;
  }


  public DestinationDefinitionSpecificationRead connectionSpecification(com.fasterxml.jackson.databind.JsonNode connectionSpecification) {
    this.connectionSpecification = connectionSpecification;
    return this;
  }

   /**
   * Get connectionSpecification
   * @return connectionSpecification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public com.fasterxml.jackson.databind.JsonNode getConnectionSpecification() {
    return connectionSpecification;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionSpecification(com.fasterxml.jackson.databind.JsonNode connectionSpecification) {
    this.connectionSpecification = connectionSpecification;
  }


  public DestinationDefinitionSpecificationRead authSpecification(AuthSpecification authSpecification) {
    this.authSpecification = authSpecification;
    return this;
  }

   /**
   * Get authSpecification
   * @return authSpecification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTH_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthSpecification getAuthSpecification() {
    return authSpecification;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthSpecification(AuthSpecification authSpecification) {
    this.authSpecification = authSpecification;
  }


  public DestinationDefinitionSpecificationRead advancedAuth(AdvancedAuth advancedAuth) {
    this.advancedAuth = advancedAuth;
    return this;
  }

   /**
   * Get advancedAuth
   * @return advancedAuth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADVANCED_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AdvancedAuth getAdvancedAuth() {
    return advancedAuth;
  }


  @JsonProperty(JSON_PROPERTY_ADVANCED_AUTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdvancedAuth(AdvancedAuth advancedAuth) {
    this.advancedAuth = advancedAuth;
  }


  public DestinationDefinitionSpecificationRead jobInfo(SynchronousJobRead jobInfo) {
    this.jobInfo = jobInfo;
    return this;
  }

   /**
   * Get jobInfo
   * @return jobInfo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_JOB_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SynchronousJobRead getJobInfo() {
    return jobInfo;
  }


  @JsonProperty(JSON_PROPERTY_JOB_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJobInfo(SynchronousJobRead jobInfo) {
    this.jobInfo = jobInfo;
  }


  public DestinationDefinitionSpecificationRead supportedDestinationSyncModes(List<DestinationSyncMode> supportedDestinationSyncModes) {
    this.supportedDestinationSyncModes = supportedDestinationSyncModes;
    return this;
  }

  public DestinationDefinitionSpecificationRead addSupportedDestinationSyncModesItem(DestinationSyncMode supportedDestinationSyncModesItem) {
    if (this.supportedDestinationSyncModes == null) {
      this.supportedDestinationSyncModes = new ArrayList<>();
    }
    this.supportedDestinationSyncModes.add(supportedDestinationSyncModesItem);
    return this;
  }

   /**
   * Get supportedDestinationSyncModes
   * @return supportedDestinationSyncModes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUPPORTED_DESTINATION_SYNC_MODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DestinationSyncMode> getSupportedDestinationSyncModes() {
    return supportedDestinationSyncModes;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_DESTINATION_SYNC_MODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedDestinationSyncModes(List<DestinationSyncMode> supportedDestinationSyncModes) {
    this.supportedDestinationSyncModes = supportedDestinationSyncModes;
  }


  /**
   * Return true if this DestinationDefinitionSpecificationRead object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationDefinitionSpecificationRead destinationDefinitionSpecificationRead = (DestinationDefinitionSpecificationRead) o;
    return Objects.equals(this.destinationDefinitionId, destinationDefinitionSpecificationRead.destinationDefinitionId) &&
        Objects.equals(this.documentationUrl, destinationDefinitionSpecificationRead.documentationUrl) &&
        Objects.equals(this.connectionSpecification, destinationDefinitionSpecificationRead.connectionSpecification) &&
        Objects.equals(this.authSpecification, destinationDefinitionSpecificationRead.authSpecification) &&
        Objects.equals(this.advancedAuth, destinationDefinitionSpecificationRead.advancedAuth) &&
        Objects.equals(this.jobInfo, destinationDefinitionSpecificationRead.jobInfo) &&
        Objects.equals(this.supportedDestinationSyncModes, destinationDefinitionSpecificationRead.supportedDestinationSyncModes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationDefinitionId, documentationUrl, connectionSpecification, authSpecification, advancedAuth, jobInfo, supportedDestinationSyncModes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationDefinitionSpecificationRead {\n");
    sb.append("    destinationDefinitionId: ").append(toIndentedString(destinationDefinitionId)).append("\n");
    sb.append("    documentationUrl: ").append(toIndentedString(documentationUrl)).append("\n");
    sb.append("    connectionSpecification: ").append(toIndentedString(connectionSpecification)).append("\n");
    sb.append("    authSpecification: ").append(toIndentedString(authSpecification)).append("\n");
    sb.append("    advancedAuth: ").append(toIndentedString(advancedAuth)).append("\n");
    sb.append("    jobInfo: ").append(toIndentedString(jobInfo)).append("\n");
    sb.append("    supportedDestinationSyncModes: ").append(toIndentedString(supportedDestinationSyncModes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

