/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.airbyte.api.client.model.generated;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.airbyte.api.client.model.generated.ActorDefinitionResourceRequirements;
import io.airbyte.api.client.model.generated.ReleaseStage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.time.LocalDate;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SourceDefinitionRead
 */
@JsonPropertyOrder({
  SourceDefinitionRead.JSON_PROPERTY_SOURCE_DEFINITION_ID,
  SourceDefinitionRead.JSON_PROPERTY_NAME,
  SourceDefinitionRead.JSON_PROPERTY_DOCKER_REPOSITORY,
  SourceDefinitionRead.JSON_PROPERTY_DOCKER_IMAGE_TAG,
  SourceDefinitionRead.JSON_PROPERTY_DOCUMENTATION_URL,
  SourceDefinitionRead.JSON_PROPERTY_ICON,
  SourceDefinitionRead.JSON_PROPERTY_PROTOCOL_VERSION,
  SourceDefinitionRead.JSON_PROPERTY_RELEASE_STAGE,
  SourceDefinitionRead.JSON_PROPERTY_RELEASE_DATE,
  SourceDefinitionRead.JSON_PROPERTY_SOURCE_TYPE,
  SourceDefinitionRead.JSON_PROPERTY_RESOURCE_REQUIREMENTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-28T19:52:03.511752+05:30[Asia/Kolkata]")
public class SourceDefinitionRead {
  public static final String JSON_PROPERTY_SOURCE_DEFINITION_ID = "sourceDefinitionId";
  private UUID sourceDefinitionId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DOCKER_REPOSITORY = "dockerRepository";
  private String dockerRepository;

  public static final String JSON_PROPERTY_DOCKER_IMAGE_TAG = "dockerImageTag";
  private String dockerImageTag;

  public static final String JSON_PROPERTY_DOCUMENTATION_URL = "documentationUrl";
  private URI documentationUrl;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_PROTOCOL_VERSION = "protocolVersion";
  private String protocolVersion;

  public static final String JSON_PROPERTY_RELEASE_STAGE = "releaseStage";
  private ReleaseStage releaseStage;

  public static final String JSON_PROPERTY_RELEASE_DATE = "releaseDate";
  private LocalDate releaseDate;

  /**
   * Gets or Sets sourceType
   */
  public enum SourceTypeEnum {
    API("api"),
    
    FILE("file"),
    
    DATABASE("database"),
    
    CUSTOM("custom");

    private String value;

    SourceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceTypeEnum fromValue(String value) {
      for (SourceTypeEnum b : SourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE_TYPE = "sourceType";
  private SourceTypeEnum sourceType;

  public static final String JSON_PROPERTY_RESOURCE_REQUIREMENTS = "resourceRequirements";
  private ActorDefinitionResourceRequirements resourceRequirements;

  public SourceDefinitionRead() { 
  }

  public SourceDefinitionRead sourceDefinitionId(UUID sourceDefinitionId) {
    this.sourceDefinitionId = sourceDefinitionId;
    return this;
  }

   /**
   * Get sourceDefinitionId
   * @return sourceDefinitionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSourceDefinitionId() {
    return sourceDefinitionId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceDefinitionId(UUID sourceDefinitionId) {
    this.sourceDefinitionId = sourceDefinitionId;
  }


  public SourceDefinitionRead name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SourceDefinitionRead dockerRepository(String dockerRepository) {
    this.dockerRepository = dockerRepository;
    return this;
  }

   /**
   * Get dockerRepository
   * @return dockerRepository
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOCKER_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDockerRepository() {
    return dockerRepository;
  }


  @JsonProperty(JSON_PROPERTY_DOCKER_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDockerRepository(String dockerRepository) {
    this.dockerRepository = dockerRepository;
  }


  public SourceDefinitionRead dockerImageTag(String dockerImageTag) {
    this.dockerImageTag = dockerImageTag;
    return this;
  }

   /**
   * Get dockerImageTag
   * @return dockerImageTag
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOCKER_IMAGE_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDockerImageTag() {
    return dockerImageTag;
  }


  @JsonProperty(JSON_PROPERTY_DOCKER_IMAGE_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDockerImageTag(String dockerImageTag) {
    this.dockerImageTag = dockerImageTag;
  }


  public SourceDefinitionRead documentationUrl(URI documentationUrl) {
    this.documentationUrl = documentationUrl;
    return this;
  }

   /**
   * Get documentationUrl
   * @return documentationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getDocumentationUrl() {
    return documentationUrl;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTATION_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentationUrl(URI documentationUrl) {
    this.documentationUrl = documentationUrl;
  }


  public SourceDefinitionRead icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public SourceDefinitionRead protocolVersion(String protocolVersion) {
    this.protocolVersion = protocolVersion;
    return this;
  }

   /**
   * The Airbyte Protocol version supported by the connector
   * @return protocolVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Airbyte Protocol version supported by the connector")
  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProtocolVersion() {
    return protocolVersion;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolVersion(String protocolVersion) {
    this.protocolVersion = protocolVersion;
  }


  public SourceDefinitionRead releaseStage(ReleaseStage releaseStage) {
    this.releaseStage = releaseStage;
    return this;
  }

   /**
   * Get releaseStage
   * @return releaseStage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELEASE_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReleaseStage getReleaseStage() {
    return releaseStage;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseStage(ReleaseStage releaseStage) {
    this.releaseStage = releaseStage;
  }


  public SourceDefinitionRead releaseDate(LocalDate releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

   /**
   * The date when this connector was first released, in yyyy-mm-dd format.
   * @return releaseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when this connector was first released, in yyyy-mm-dd format.")
  @JsonProperty(JSON_PROPERTY_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getReleaseDate() {
    return releaseDate;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseDate(LocalDate releaseDate) {
    this.releaseDate = releaseDate;
  }


  public SourceDefinitionRead sourceType(SourceTypeEnum sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SourceTypeEnum getSourceType() {
    return sourceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceType(SourceTypeEnum sourceType) {
    this.sourceType = sourceType;
  }


  public SourceDefinitionRead resourceRequirements(ActorDefinitionResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
    return this;
  }

   /**
   * Get resourceRequirements
   * @return resourceRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActorDefinitionResourceRequirements getResourceRequirements() {
    return resourceRequirements;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceRequirements(ActorDefinitionResourceRequirements resourceRequirements) {
    this.resourceRequirements = resourceRequirements;
  }


  /**
   * Return true if this SourceDefinitionRead object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceDefinitionRead sourceDefinitionRead = (SourceDefinitionRead) o;
    return Objects.equals(this.sourceDefinitionId, sourceDefinitionRead.sourceDefinitionId) &&
        Objects.equals(this.name, sourceDefinitionRead.name) &&
        Objects.equals(this.dockerRepository, sourceDefinitionRead.dockerRepository) &&
        Objects.equals(this.dockerImageTag, sourceDefinitionRead.dockerImageTag) &&
        Objects.equals(this.documentationUrl, sourceDefinitionRead.documentationUrl) &&
        Objects.equals(this.icon, sourceDefinitionRead.icon) &&
        Objects.equals(this.protocolVersion, sourceDefinitionRead.protocolVersion) &&
        Objects.equals(this.releaseStage, sourceDefinitionRead.releaseStage) &&
        Objects.equals(this.releaseDate, sourceDefinitionRead.releaseDate) &&
        Objects.equals(this.sourceType, sourceDefinitionRead.sourceType) &&
        Objects.equals(this.resourceRequirements, sourceDefinitionRead.resourceRequirements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceDefinitionId, name, dockerRepository, dockerImageTag, documentationUrl, icon, protocolVersion, releaseStage, releaseDate, sourceType, resourceRequirements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceDefinitionRead {\n");
    sb.append("    sourceDefinitionId: ").append(toIndentedString(sourceDefinitionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dockerRepository: ").append(toIndentedString(dockerRepository)).append("\n");
    sb.append("    dockerImageTag: ").append(toIndentedString(dockerImageTag)).append("\n");
    sb.append("    documentationUrl: ").append(toIndentedString(documentationUrl)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    protocolVersion: ").append(toIndentedString(protocolVersion)).append("\n");
    sb.append("    releaseStage: ").append(toIndentedString(releaseStage)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    resourceRequirements: ").append(toIndentedString(resourceRequirements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

