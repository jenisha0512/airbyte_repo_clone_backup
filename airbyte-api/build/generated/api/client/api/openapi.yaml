openapi: 3.0.0
info:
  contact:
    email: contact@airbyte.io
  description: |
    Airbyte Configuration API
    [https://airbyte.io](https://airbyte.io).

    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.

    Here are some conventions that this API follows:
    * All endpoints are http POST methods.
    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.
    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.
    * For all `update` methods, the whole object must be passed in, even the fields that did not change.

    Authentication (OSS):
    * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': "Basic YWlyYnl0ZTpwYXNzd29yZA=="`
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Airbyte Configuration API
  version: 1.0.0
externalDocs:
  description: Find out more about Airbyte
  url: https://airbyte.io
servers:
- url: http://localhost:8000/api
security:
- {}
tags:
- description: Workspace related resources.
  name: workspace
- description: SourceDefinition related resources.
  name: source_definition
- description: SourceDefinition specification related resources.
  name: source_definition_specification
- description: Source related resources.
  name: source
- description: DestinationDefinition related resources.
  name: destination_definition
- description: DestinationDefinitionSpecification related resources.
  name: destination_definition_specification
- description: Destination related resources.
  name: destination
- description: Connection between sources and destinations.
  name: connection
- description: Source OAuth related resources to delegate access from user.
  name: destination_oauth
- description: Source OAuth related resources to delegate access from user.
  name: source_oauth
- description: |
    Endpoints for the Airbyte web application. Those APIs should not be called outside the web application implementation and are not
    guaranteeing any backwards compatibility.
  name: web_backend
- description: Healthchecks
  name: health
- description: Export/Import Airbyte Configuration and Database resources.
  name: deployment
- description: Interactions with attempt related resources.
  name: attempt
- description: Interactions with state related resources.
  name: state
paths:
  /v1/workspaces/create:
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a workspace
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/delete:
    post:
      operationId: deleteWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Deletes a workspace
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/list:
    post:
      operationId: listWorkspaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
          description: Successful operation
      summary: List all workspaces registered in the current Airbyte deployment
      tags:
      - workspace
      x-accepts: application/json
  /v1/workspaces/get:
    post:
      operationId: getWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by ID
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/get_by_slug:
    post:
      operationId: getWorkspaceBySlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlugRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by slug
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/get_by_connection_id:
    post:
      operationId: getWorkspaceByConnectionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by connection id
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/update:
    post:
      operationId: updateWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace state
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/update_name:
    post:
      operationId: updateWorkspaceName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateName'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace name
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/workspaces/tag_feedback_status_as_done:
    post:
      operationId: updateWorkspaceFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGiveFeedback'
        required: true
      responses:
        "204":
          description: The feedback state has been properly updated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: Update workspace feedback state
      tags:
      - workspace
      x-content-type: application/json
      x-accepts: application/json
  /v1/notifications/try:
    post:
      operationId: tryNotificationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Try sending a notifications
      tags:
      - notifications
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/update:
    post:
      operationId: updateSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a sourceDefinition
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/list:
    post:
      operationId: listSourceDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List all the sourceDefinitions the current Airbyte deployment is configured
        to use
      tags:
      - source_definition
      x-accepts: application/json
  /v1/source_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported sources.
      operationId: listLatestSourceDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List the latest sourceDefinitions Airbyte supports
      tags:
      - source_definition
      x-accepts: application/json
  /v1/source_definitions/get:
    post:
      operationId: getSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/delete:
    post:
      operationId: deleteSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source definition
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/list_private:
    post:
      operationId: listPrivateSourceDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionReadList'
          description: Successful operation
      summary: "List all private, non-custom sourceDefinitions, and for each indicate\
        \ whether the given workspace has a grant for using the definition. Used by\
        \ admins to view and modify a given workspace's grants."
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/list_for_workspace:
    post:
      operationId: listSourceDefinitionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List all the sourceDefinitions the given workspace is configured to
        use
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/create_custom:
    post:
      operationId: createCustomSourceDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSourceDefinitionCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a custom sourceDefinition for the given workspace
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/get_for_workspace:
    post:
      operationId: getSourceDefinitionForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a sourceDefinition that is configured for the given workspace
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/grant_definition:
    post:
      operationId: grantSourceDefinitionToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "grant a private, non-custom sourceDefinition to a given workspace"
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definitions/revoke_definition:
    post:
      operationId: revokeSourceDefinitionFromWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "revoke a grant to a private, non-custom sourceDefinition from a given\
        \ workspace"
      tags:
      - source_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_definition_specifications/get:
    post:
      operationId: getSourceDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a SourceDefinition.
      tags:
      - source_definition_specification
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/create:
    post:
      operationId: createSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/update:
    post:
      operationId: updateSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/list:
    post:
      description: List sources for workspace. Does not return deleted sources.
      operationId: listSourcesForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List sources for workspace
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/get:
    post:
      operationId: getSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/most_recent_source_actor_catalog:
    post:
      operationId: getMostRecentSourceActorCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorCatalogWithUpdatedAt'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get most recent ActorCatalog for source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/search:
    post:
      operationId: searchSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search sources
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/clone:
    post:
      operationId: cloneSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCloneRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Clone source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/delete:
    post:
      operationId: deleteSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/check_connection:
    post:
      operationId: checkConnectionToSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/check_connection_for_update:
    post:
      operationId: checkConnectionToSourceForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/discover_schema:
    post:
      operationId: discoverSchemaForSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Discover the schema catalog of the source
      tags:
      - source
      x-content-type: application/json
      x-accepts: application/json
  /v1/sources/write_discover_catalog_result:
    post:
      operationId: writeDiscoverCatalogResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaWriteRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverCatalogResult'
          description: Successful Operation
      summary: "Should only called from worker, to write result from discover activity\
        \ back to DB."
      tags:
      - source
      - internal
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/update:
    post:
      operationId: updateDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update destinationDefinition
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/list:
    post:
      operationId: listDestinationDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List all the destinationDefinitions the current Airbyte deployment
        is configured to use
      tags:
      - destination_definition
      x-accepts: application/json
  /v1/destination_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported destinations.
      operationId: listLatestDestinationDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List the latest destinationDefinitions Airbyte supports
      tags:
      - destination_definition
      x-accepts: application/json
  /v1/destination_definitions/get:
    post:
      operationId: getDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get destinationDefinition
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/delete:
    post:
      operationId: deleteDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a destination definition
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/list_private:
    post:
      operationId: listPrivateDestinationDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionReadList'
          description: Successful operation
      summary: "List all private, non-custom destinationDefinitions, and for each\
        \ indicate whether the given workspace has a grant for using the definition.\
        \ Used by admins to view and modify a given workspace's grants."
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/list_for_workspace:
    post:
      operationId: listDestinationDefinitionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List all the destinationDefinitions the given workspace is configured
        to use
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/create_custom:
    post:
      operationId: createCustomDestinationDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationDefinitionCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a custom destinationDefinition for the given workspace
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/get_for_workspace:
    post:
      operationId: getDestinationDefinitionForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a destinationDefinition that is configured for the given workspace
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/grant_definition:
    post:
      operationId: grantDestinationDefinitionToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "grant a private, non-custom destinationDefinition to a given workspace"
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definitions/revoke_definition:
    post:
      operationId: revokeDestinationDefinitionFromWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "revoke a grant to a private, non-custom destinationDefinition from\
        \ a given workspace"
      tags:
      - destination_definition
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_definition_specifications/get:
    post:
      operationId: getDestinationDefinitionSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a destinationDefinition
      tags:
      - destination_definition_specification
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/create:
    post:
      operationId: createDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/update:
    post:
      operationId: updateDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/list:
    post:
      operationId: listDestinationsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List configured destinations for a workspace
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/get:
    post:
      operationId: getDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get configured destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/search:
    post:
      operationId: searchDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search destinations
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/check_connection:
    post:
      operationId: checkConnectionToDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/check_connection_for_update:
    post:
      operationId: checkConnectionToDestinationForUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/delete:
    post:
      operationId: deleteDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete the destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/destinations/clone:
    post:
      operationId: cloneDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCloneRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Clone destination
      tags:
      - destination
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/create:
    post:
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection between a source and a destination
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/update:
    post:
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: updateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/list:
    post:
      description: List connections for workspace. Does not return deleted connections.
      operationId: listConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all connections for a workspace.
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/list_all:
    post:
      description: "List connections for workspace, including deleted connections."
      operationId: listAllConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Returns all connections for a workspace, including deleted connections."
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/get:
    post:
      operationId: getConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/state/get:
    post:
      operationId: getState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Fetch the current state for a connection.
      tags:
      - state
      x-content-type: application/json
      x-accepts: application/json
  /v1/state/create_or_update:
    post:
      operationId: createOrUpdateState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStateCreateOrUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create or update the state for a connection.
      tags:
      - state
      - internal
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/search:
    post:
      operationId: searchConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search connections
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/delete:
    post:
      operationId: deleteConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a connection
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/sync:
    post:
      operationId: syncConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Trigger a manual sync of the connection
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/connections/reset:
    post:
      operationId: resetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Reset the data for the connection. Deletes data generated by the connection
        in the destination. Resets any cursors back to initial state.
      tags:
      - connection
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/check:
    post:
      operationId: checkOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check if an operation to be created is valid
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/create:
    post:
      operationId: createOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create an operation to be applied as part of a connection pipeline
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/update:
    post:
      operationId: updateOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update an operation
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/list:
    post:
      description: List operations for connection.
      operationId: listOperationsForConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all operations for a connection.
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/get:
    post:
      operationId: getOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns an operation
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/operations/delete:
    post:
      operationId: deleteOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete an operation
      tags:
      - operation
      x-content-type: application/json
      x-accepts: application/json
  /v1/scheduler/sources/check_connection:
    post:
      operationId: executeSourceCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given source configuration
      tags:
      - scheduler
      x-content-type: application/json
      x-accepts: application/json
  /v1/scheduler/sources/discover_schema:
    post:
      operationId: executeSourceDiscoverSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run discover schema for a given source a source configuration
      tags:
      - scheduler
      x-content-type: application/json
      x-accepts: application/json
  /v1/scheduler/destinations/check_connection:
    post:
      operationId: executeDestinationCheckConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCoreConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given destination configuration
      tags:
      - scheduler
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_oauths/oauth_params/create:
    post:
      operationId: setInstancewideSourceOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideSourceOauthParamsRequestBody'
        required: true
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - source_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_oauths/get_consent_url:
    post:
      operationId: getSourceOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceOauthConsentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Given a source connector definition ID, return the URL to the consent\
        \ screen where to redirect the user to."
      tags:
      - source_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/source_oauths/complete_oauth:
    post:
      operationId: completeSourceOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSourceOauthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a source def ID generate an access/refresh token etc.
      tags:
      - source_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_oauths/get_consent_url:
    post:
      operationId: getDestinationOAuthConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationOauthConsentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Given a destination connector definition ID, return the URL to the\
        \ consent screen where to redirect the user to."
      tags:
      - destination_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_oauths/complete_oauth:
    post:
      operationId: completeDestinationOAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteDestinationOAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a destination def ID generate an access/refresh token etc.
      tags:
      - destination_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/destination_oauths/oauth_params/create:
    post:
      operationId: setInstancewideDestinationOauthParams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideDestinationOauthParamsRequestBody'
        required: true
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - destination_oauth
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/check_updates:
    post:
      operationId: webBackendCheckUpdates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendCheckUpdatesRead'
          description: Successful operation
      summary: Returns a summary of source and destination definitions that could
        be updated.
      tags:
      - web_backend
      x-accepts: application/json
  /v1/web_backend/connections/list:
    post:
      operationId: webBackendListConnectionsForWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionListRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all non-deleted connections for a workspace.
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/connections/get:
    post:
      operationId: webBackendGetConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/connections/create:
    post:
      operationId: webBackendCreateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/connections/update:
    post:
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Any operations that lack an ID will be created. Then, the newly created operationId will be applied to the
        connection along with the rest of the operationIds in the request body.
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: webBackendUpdateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/state/get_type:
    post:
      operationId: getStateType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStateType'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Fetch the current state type for a connection.
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/workspace/state:
    post:
      operationId: webBackendGetWorkspaceState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendWorkspaceState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendWorkspaceStateResult'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns the current state of a workspace
      tags:
      - web_backend
      x-content-type: application/json
      x-accepts: application/json
  /v1/web_backend/geographies/list:
    post:
      description: Returns all available geographies in which a data sync can run.
      operationId: webBackendListGeographies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendGeographiesListResult'
          description: Successful operation
      summary: |
        Returns available geographies can be selected to run data syncs in a particular geography.
        The 'auto' entry indicates that the sync will be automatically assigned to a geography according
        to the platform default behavior. Entries other than 'auto' are two-letter country codes that
        follow the ISO 3166-1 alpha-2 standard.
      tags:
      - web_backend
      x-accepts: application/json
  /v1/jobs/list:
    post:
      operationId: listJobsFor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns recent jobs for a connection. Jobs are returned in descending
        order by createdAt.
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/get:
    post:
      operationId: getJobInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get information about a job
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/get_last_replication_job:
    post:
      operationId: getLastReplicationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOptionalRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/get_light:
    post:
      operationId: getJobInfoLight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoLightRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get information about a job excluding attempt info and logs
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/cancel:
    post:
      operationId: cancelJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Cancels a job
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/get_debug_info:
    post:
      operationId: getJobDebugInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDebugInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Gets all information needed to debug this job
      tags:
      - jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/get_normalization_status:
    post:
      operationId: getAttemptNormalizationStatusesForJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptNormalizationStatusReadList'
          description: Successful operation
      summary: Get normalization status to determine if we can bypass normalization
        phase
      tags:
      - jobs
      - internal
      x-content-type: application/json
      x-accepts: application/json
  /v1/health:
    get:
      operationId: getHealthCheck
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckRead'
          description: Successful operation
      security: []
      summary: Health Check
      tags:
      - health
      x-accepts: application/json
  /v1/logs/get:
    post:
      operationId: getLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsRequestBody'
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the log file
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get logs
      tags:
      - logs
      x-content-type: application/json
      x-accepts: application/json
  /v1/openapi:
    get:
      operationId: getOpenApiSpec
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the openapi specification file
      summary: Returns the openapi specification
      tags:
      - openapi
      x-accepts: text/plain
  /v1/attempt/set_workflow_in_attempt:
    post:
      operationId: setWorkflowInAttempt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkflowInAttemptRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
          description: Successful Operation
      summary: For worker to register the workflow id in attempt.
      tags:
      - attempt
      - internal
      x-content-type: application/json
      x-accepts: application/json
  /v1/attempt/save_stats:
    post:
      operationId: saveStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveStatsRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
          description: Successful Operation
      summary: For worker to set sync stats of a running attempt.
      tags:
      - attempt
      - internal
      x-content-type: application/json
      x-accepts: application/json
components:
  responses:
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
      description: Object with given id was not found.
    InvalidInputResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidInputExceptionInfo'
      description: Input failed validation
    ExceptionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnownExceptionInfo'
      description: Exception occurred; see message for details.
  schemas:
    WorkspaceId:
      format: uuid
      type: string
    CustomerId:
      format: uuid
      type: string
    WorkspaceCreate:
      example:
        news: true
        displaySetupWizard: true
        defaultGeography: null
        webhookConfigs:
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        anonymousDataCollection: true
        name: name
        email: email
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
      properties:
        email:
          format: email
          type: string
        anonymousDataCollection:
          type: boolean
        name:
          type: string
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        displaySetupWizard:
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
          type: array
      required:
      - name
      type: object
    WebhookConfigWrite:
      example:
        authToken: authToken
        name: name
        validationUrl: validationUrl
      properties:
        name:
          description: human readable name for this webhook e.g. for UI display.
          type: string
        authToken:
          description: "an auth token, to be passed as the value for an HTTP Authorization\
            \ header."
          type: string
        validationUrl:
          description: "if supplied, the webhook config will be validated by checking\
            \ that this URL returns a 2xx response."
          type: string
      type: object
    Notification:
      example:
        slackConfiguration:
          webhook: webhook
        sendOnSuccess: false
        sendOnFailure: true
        customerioConfiguration: "{}"
        notificationType: null
      properties:
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        sendOnSuccess:
          default: false
          type: boolean
        sendOnFailure:
          default: true
          type: boolean
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
        customerioConfiguration:
          type: object
      required:
      - notificationType
      - sendOnFailure
      - sendOnSuccess
      type: object
    SlackNotificationConfiguration:
      example:
        webhook: webhook
      properties:
        webhook:
          type: string
      required:
      - webhook
      type: object
    CustomerioNotificationConfiguration:
      type: object
    NotificationType:
      enum:
      - slack
      - customerio
      type: string
    NotificationRead:
      example:
        message: message
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
      required:
      - status
      type: object
    WorkspaceIdRequestBody:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
      required:
      - workspaceId
      type: object
    WorkspaceReadList:
      example:
        workspaces:
        - news: true
          defaultGeography: null
          webhookConfigs:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          firstCompletedSync: true
          feedbackDone: true
          email: email
          slug: slug
          securityUpdates: true
          notifications:
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
            customerioConfiguration: "{}"
            notificationType: null
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
            customerioConfiguration: "{}"
            notificationType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - news: true
          defaultGeography: null
          webhookConfigs:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          firstCompletedSync: true
          feedbackDone: true
          email: email
          slug: slug
          securityUpdates: true
          notifications:
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
            customerioConfiguration: "{}"
            notificationType: null
          - slackConfiguration:
              webhook: webhook
            sendOnSuccess: false
            sendOnFailure: true
            customerioConfiguration: "{}"
            notificationType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaces:
          items:
            $ref: '#/components/schemas/WorkspaceRead'
          type: array
      required:
      - workspaces
      type: object
    WorkspaceRead:
      example:
        news: true
        defaultGeography: null
        webhookConfigs:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        displaySetupWizard: true
        initialSetupComplete: true
        anonymousDataCollection: true
        customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        firstCompletedSync: true
        feedbackDone: true
        email: email
        slug: slug
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        customerId:
          format: uuid
          type: string
        email:
          format: email
          type: string
        name:
          type: string
        slug:
          type: string
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        firstCompletedSync:
          type: boolean
        feedbackDone:
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigRead'
          type: array
      required:
      - customerId
      - initialSetupComplete
      - name
      - slug
      - workspaceId
      type: object
    WebhookConfigRead:
      description: the readable info for a webhook config; omits sensitive info e.g.
        auth token
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          description: human-readable name e.g. for display in UI
          type: string
      required:
      - id
      type: object
    WorkspaceUpdateName:
      example:
        name: name
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
      required:
      - name
      - workspaceId
      type: object
    WorkspaceUpdate:
      description: "Used to apply a patch-style update to a workspace, which means\
        \ that null properties remain unchanged"
      example:
        displaySetupWizard: true
        news: true
        initialSetupComplete: true
        defaultGeography: null
        webhookConfigs:
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        anonymousDataCollection: true
        email: email
        securityUpdates: true
        notifications:
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
        - slackConfiguration:
            webhook: webhook
          sendOnSuccess: false
          sendOnFailure: true
          customerioConfiguration: "{}"
          notificationType: null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        email:
          format: email
          type: string
        initialSetupComplete:
          type: boolean
        displaySetupWizard:
          type: boolean
        anonymousDataCollection:
          type: boolean
        news:
          type: boolean
        securityUpdates:
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
          type: array
      required:
      - workspaceId
      type: object
    WorkspaceGiveFeedback:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
      required:
      - workspaceId
      type: object
    WebBackendWorkspaceState:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
      required:
      - workspaceId
      type: object
    WebBackendWorkspaceStateResult:
      example:
        hasDestinations: true
        hasConnections: true
        hasSources: true
      properties:
        hasConnections:
          type: boolean
        hasSources:
          type: boolean
        hasDestinations:
          type: boolean
      required:
      - hasConnections
      - hasDestinations
      - hasSources
      type: object
    WebBackendGeographiesListResult:
      example:
        geographies:
        - null
        - null
      properties:
        geographies:
          items:
            $ref: '#/components/schemas/Geography'
          type: array
      required:
      - geographies
      type: object
    SlugRequestBody:
      example:
        slug: slug
      properties:
        slug:
          type: string
      required:
      - slug
      type: object
    Geography:
      enum:
      - auto
      - us
      - eu
      type: string
    SourceDefinitionId:
      format: uuid
      type: string
    SourceDefinitionIdRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
      required:
      - sourceDefinitionId
      type: object
    SourceDefinitionCreate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        name: name
        icon: icon
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      type: object
    SourceDefinitionUpdate:
      description: "Update the SourceDefinition. Currently, the only allowed attribute\
        \ to update is the default docker image version."
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        dockerImageTag: dockerImageTag
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        dockerImageTag:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - sourceDefinitionId
      type: object
    SourceDefinitionRead:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        sourceType: api
        dockerRepository: dockerRepository
        releaseStage: null
        name: name
        icon: icon
        protocolVersion: protocolVersion
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: "The date when this connector was first released, in yyyy-mm-dd\
            \ format."
          format: date
          type: string
        sourceType:
          enum:
          - api
          - file
          - database
          - custom
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - dockerRepository
      - name
      - sourceDefinitionId
      type: object
    SourceDefinitionReadList:
      example:
        sourceDefinitions:
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: null
          name: name
          icon: icon
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: null
          name: name
          icon: icon
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/SourceDefinitionRead'
          type: array
      required:
      - sourceDefinitions
      type: object
    CustomSourceDefinitionCreate:
      example:
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          dockerRepository: dockerRepository
          name: name
          icon: icon
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionCreate'
      required:
      - sourceDefinition
      - workspaceId
      type: object
    SourceDefinitionIdWithWorkspaceId:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
      required:
      - sourceDefinitionId
      - workspaceId
      type: object
    PrivateSourceDefinitionRead:
      example:
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: null
          name: name
          icon: icon
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        granted: true
      properties:
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        granted:
          type: boolean
      required:
      - granted
      - sourceDefinition
      type: object
    PrivateSourceDefinitionReadList:
      example:
        sourceDefinitions:
        - sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: null
            name: name
            icon: icon
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
        - sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: null
            name: name
            icon: icon
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
      properties:
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/PrivateSourceDefinitionRead'
          type: array
      required:
      - sourceDefinitions
      type: object
    SourceDefinitionSpecification:
      description: The specification for what values are required to configure the
        sourceDefinition.
      example:
        user:
          type: string
      type: object
    SourceAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    AuthSpecification:
      example:
        auth_type: oauth2.0
        oauth2Specification:
          oauthFlowOutputParameters:
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          rootObject:
          - path
          - 1
          oauthFlowInitParameters:
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
      properties:
        auth_type:
          enum:
          - oauth2.0
          type: string
        oauth2Specification:
          $ref: '#/components/schemas/OAuth2Specification'
      type: object
    OAuth2Specification:
      description: An object containing any metadata needed to describe this connector's
        Oauth flow
      example:
        oauthFlowOutputParameters:
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        rootObject:
        - path
        - 1
        oauthFlowInitParameters:
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
      properties:
        rootObject:
          description: "A list of strings representing a pointer to the root object\
            \ which contains any oauth parameters in the ConnectorSpecification.\n\
            Examples:\nif oauth parameters were contained inside the top level, rootObject=[]\
            \ If they were nested inside another object {'credentials': {'app_id'\
            \ etc...}, rootObject=['credentials'] If they were inside a oneOf {'switch':\
            \ {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch',\
            \ 0] "
          example:
          - path
          - 1
          items: {}
          type: array
        oauthFlowInitParameters:
          description: "Pointers to the fields in the rootObject needed to obtain\
            \ the initial refresh/access tokens for the OAuth flow. Each inner array\
            \ represents the path in the rootObject of the referenced field. For example.\
            \ Assume the rootObject contains params 'app_secret', 'app_id' which are\
            \ needed to get the initial refresh token. If they are not nested in the\
            \ rootObject, then the array would look like this [['app_secret'], ['app_id']]\
            \ If they are nested inside an object called 'auth_params' then this array\
            \ would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]"
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          type: array
        oauthFlowOutputParameters:
          description: Pointers to the fields in the rootObject which can be populated
            from successfully completing the oauth flow using the init parameters.
            This is typically a refresh/access token. Each inner array represents
            the path in the rootObject of the referenced field.
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          type: array
      required:
      - oauthFlowInitParameters
      - oauthFlowOutputParameters
      - rootObject
      type: object
    SourceDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        connectionSpecification:
          user:
            type: string
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: null
            completeOAuthServerInputSpecification: null
            completeOAuthOutputSpecification: null
            oauthUserInputFromConnectorConfigSpecification: null
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: null
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        documentationUrl:
          type: string
        connectionSpecification:
          $ref: '#/components/schemas/SourceDefinitionSpecification'
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      - sourceDefinitionId
      type: object
    SourceId:
      format: uuid
      type: string
    SourceIdRequestBody:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceId:
          format: uuid
          type: string
      required:
      - sourceId
      type: object
    SourceCloneRequestBody:
      description: The values required to configure the source. The schema for this
        should have an id of the existing source along with the configuration you
        want to change in case.
      example:
        sourceConfiguration:
          connectionConfiguration:
            user: charles
          name: name
        sourceCloneId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceCloneId:
          format: uuid
          type: string
        sourceConfiguration:
          $ref: '#/components/schemas/SourceCloneConfiguration'
      required:
      - sourceCloneId
      type: object
    SourceCloneConfiguration:
      example:
        connectionConfiguration:
          user: charles
        name: name
      properties:
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
      type: object
    SourceConfiguration:
      description: The values required to configure the source. The schema for this
        must match the schema return by source_definition_specifications/get for the
        source.
      example:
        user: charles
    SourceCoreConfig:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceId:
          format: uuid
          type: string
        sourceDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        workspaceId:
          format: uuid
          type: string
      required:
      - connectionConfiguration
      - sourceDefinitionId
      - workspaceId
      type: object
    SourceCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - workspaceId
      type: object
    SourceDiscoverSchemaRequestBody:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        disable_cache: true
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceId:
          format: uuid
          type: string
        connectionId:
          format: uuid
          type: string
        disable_cache:
          type: boolean
      required:
      - sourceId
      type: object
    SourceUpdate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
      properties:
        sourceId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceId
      type: object
    SourceRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
        icon: icon
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        sourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        sourceName:
          type: string
        icon:
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - sourceId
      - sourceName
      - workspaceId
      type: object
    SourceSnippetRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        icon: icon
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
      properties:
        sourceId:
          format: uuid
          type: string
        name:
          type: string
        sourceDefinitionId:
          format: uuid
          type: string
        sourceName:
          type: string
        icon:
          type: string
      required:
      - name
      - sourceDefinitionId
      - sourceId
      - sourceName
      type: object
    SourceReadList:
      example:
        sources:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sources:
          items:
            $ref: '#/components/schemas/SourceRead'
          type: array
      required:
      - sources
      type: object
    SourceDiscoverSchemaWriteRequestBody:
      description: to write this requested object to database.
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configurationHash: configurationHash
        catalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectorVersion: connectorVersion
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        sourceId:
          format: uuid
          type: string
        connectorVersion:
          type: string
        configurationHash:
          type: string
      required:
      - catalog
      type: object
    SourceDiscoverSchemaRead:
      description: "Returns the results of a discover catalog job. If the job was\
        \ not successful, the catalog field will not be present. jobInfo will aways\
        \ be present and its status be used to determine if the job was successful\
        \ or not."
      example:
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        breakingChange: true
        catalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionStatus: null
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: null
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
        catalogDiff:
          transforms:
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        catalogId:
          format: uuid
          type: string
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        breakingChange:
          type: boolean
        connectionStatus:
          $ref: '#/components/schemas/ConnectionStatus'
      required:
      - jobInfo
      type: object
    SourceSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        sourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        name:
          type: string
        sourceName:
          type: string
      type: object
    DestinationDefinitionId:
      format: uuid
      type: string
    DestinationAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    DestinationDefinitionIdRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
      required:
      - destinationDefinitionId
      type: object
    DestinationDefinitionCreate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        name: name
        icon: icon
      properties:
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      type: object
    DestinationDefinitionUpdate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        dockerImageTag: dockerImageTag
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        dockerImageTag:
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - destinationDefinitionId
      - dockerImageag
      type: object
    DestinationDefinitionRead:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: null
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        dockerRepository: dockerRepository
        releaseStage: null
        supportsDbt: true
        name: name
        icon: icon
        normalizationConfig:
          normalizationIntegrationType: normalizationIntegrationType
          normalizationRepository: normalizationRepository
          normalizationTag: normalizationTag
          supported: false
        protocolVersion: protocolVersion
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        name:
          type: string
        dockerRepository:
          type: string
        dockerImageTag:
          type: string
        documentationUrl:
          format: uri
          type: string
        icon:
          type: string
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        releaseDate:
          description: "The date when this connector was first released, in yyyy-mm-dd\
            \ format."
          format: date
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        supportsDbt:
          description: an optional flag indicating whether DBT is used in the normalization.
            If the flag value is NULL - DBT is not used.
          type: boolean
        normalizationConfig:
          $ref: '#/components/schemas/NormalizationDestinationDefinitionConfig'
      required:
      - destinationDefinitionId
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      - normalizationConfig
      - supportsDbt
      type: object
    DestinationDefinitionReadList:
      example:
        destinationDefinitions:
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: null
          supportsDbt: true
          name: name
          icon: icon
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: null
          supportsDbt: true
          name: name
          icon: icon
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitions:
          items:
            $ref: '#/components/schemas/DestinationDefinitionRead'
          type: array
      required:
      - destinationDefinitions
      type: object
    CustomDestinationDefinitionCreate:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          dockerRepository: dockerRepository
          name: name
          icon: icon
      properties:
        workspaceId:
          format: uuid
          type: string
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionCreate'
      required:
      - destinationDefinition
      - workspaceId
      type: object
    DestinationDefinitionIdWithWorkspaceId:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
      required:
      - destinationDefinitionId
      - workspaceId
      type: object
    PrivateDestinationDefinitionRead:
      example:
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: null
          supportsDbt: true
          name: name
          icon: icon
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        granted: true
      properties:
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
        granted:
          type: boolean
      required:
      - destinationDefinition
      - granted
      type: object
    PrivateDestinationDefinitionReadList:
      example:
        destinationDefinitions:
        - destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: null
            supportsDbt: true
            name: name
            icon: icon
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
        - destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: null
            supportsDbt: true
            name: name
            icon: icon
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
      properties:
        destinationDefinitions:
          items:
            $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
          type: array
      required:
      - destinationDefinitions
      type: object
    DestinationDefinitionSpecification:
      description: The specification for what values are required to configure the
        destinationDefinition.
      example:
        user:
          type: string
    DestinationDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        connectionSpecification:
          user:
            type: string
        supportedDestinationSyncModes:
        - null
        - null
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: null
            completeOAuthServerInputSpecification: null
            completeOAuthOutputSpecification: null
            oauthUserInputFromConnectorConfigSpecification: null
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: null
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        documentationUrl:
          type: string
        connectionSpecification:
          $ref: '#/components/schemas/DestinationDefinitionSpecification'
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        supportedDestinationSyncModes:
          items:
            $ref: '#/components/schemas/DestinationSyncMode'
          type: array
      required:
      - destinationDefinitionId
      - jobInfo
      type: object
    DestinationId:
      format: uuid
      type: string
    DestinationIdRequestBody:
      example:
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
      required:
      - destinationId
      type: object
    DestinationConfiguration:
      description: The values required to configure the destination. The schema for
        this must match the schema return by destination_definition_specifications/get
        for the destinationDefinition.
      example:
        user: charles
    DestinationCoreConfig:
      example:
        connectionConfiguration:
          user: charles
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
        destinationDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        workspaceId:
          format: uuid
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - workspaceId
      type: object
    DestinationCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        destinationDefinitionId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - name
      - workspaceId
      type: object
    DestinationUpdate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
      required:
      - connectionConfiguration
      - destinationId
      - name
      type: object
    DestinationCloneRequestBody:
      description: The values required to configure the destination. The schema for
        this should have an id of the existing destination along with the configuration
        you want to change in case.
      example:
        destinationConfiguration:
          connectionConfiguration:
            user: charles
          name: name
        destinationCloneId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationCloneId:
          format: uuid
          type: string
        destinationConfiguration:
          $ref: '#/components/schemas/DestinationCloneConfiguration'
      required:
      - destinationCloneId
      type: object
    DestinationCloneConfiguration:
      example:
        connectionConfiguration:
          user: charles
        name: name
      properties:
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
      type: object
    DestinationRead:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        name: name
        icon: icon
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
        destinationName:
          type: string
        icon:
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - destinationId
      - destinationName
      - name
      - workspaceId
      type: object
    DestinationSnippetRead:
      example:
        destinationName: destinationName
        name: name
        icon: icon
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          type: string
        name:
          type: string
        destinationDefinitionId:
          format: uuid
          type: string
        destinationName:
          type: string
        icon:
          type: string
      required:
      - destinationDefinitionId
      - destinationId
      - destinationName
      - name
      type: object
    DestinationReadList:
      example:
        destinations:
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinations:
          items:
            $ref: '#/components/schemas/DestinationRead'
          type: array
      required:
      - destinations
      type: object
    DestinationSearch:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        connectionConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        name:
          type: string
        destinationName:
          type: string
      type: object
    ReleaseStage:
      enum:
      - alpha
      - beta
      - generally_available
      - custom
      type: string
    ConnectionId:
      format: uuid
      type: string
    ConnectionIdRequestBody:
      example:
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
      required:
      - connectionId
      type: object
    DbMigrationRequestBody:
      properties:
        database:
          type: string
      required:
      - database
      type: object
    WebBackendConnectionRequestBody:
      example:
        withRefreshedCatalog: true
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        withRefreshedCatalog:
          type: boolean
        connectionId:
          format: uuid
          type: string
      required:
      - connectionId
      type: object
    ConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        scheduleType: null
        notifySchemaChanges: true
        geography: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: null
        status: null
      properties:
        name:
          description: Optional name of the connection
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          format: uuid
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
      required:
      - destinationId
      - sourceId
      - status
      type: object
    WebBackendConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduleType: null
        geography: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: null
        status: null
      properties:
        name:
          description: Optional name of the connection
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        operations:
          items:
            $ref: '#/components/schemas/OperationCreate'
          type: array
        sourceCatalogId:
          format: uuid
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
      required:
      - destinationId
      - sourceId
      - status
      type: object
    ConnectionStateCreateOrUpdate:
      example:
        connectionState:
          globalState:
            shared_state: null
            streamStates:
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: null
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: null
          stateType: null
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          streamState:
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: null
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: null
          state: null
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          type: string
        connectionState:
          $ref: '#/components/schemas/ConnectionState'
      required:
      - connectionId
      - connectionState
      type: object
    ConnectionUpdate:
      description: "Used to apply a patch-style update to a connection, which means\
        \ that null properties remain unchanged"
      example:
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        breakingChange: true
        scheduleType: null
        notifySchemaChanges: true
        geography: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: null
        status: null
      properties:
        connectionId:
          format: uuid
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        name:
          description: Name that will be set to this connection
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          format: uuid
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        breakingChange:
          type: boolean
      required:
      - connectionId
      type: object
    WebBackendConnectionUpdate:
      description: "Used to apply a patch-style update to a connection, which means\
        \ that null properties remain unchanged"
      example:
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        skipReset: true
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduleType: null
        notifySchemaChanges: true
        geography: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: null
        status: null
      properties:
        name:
          description: Name that will be set to the connection
          type: string
        connectionId:
          format: uuid
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        skipReset:
          type: boolean
        operations:
          items:
            $ref: '#/components/schemas/WebBackendOperationCreateOrUpdate'
          type: array
        sourceCatalogId:
          format: uuid
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
      required:
      - connectionId
      type: object
    ConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        breakingChange: true
        scheduleType: null
        notifySchemaChanges: true
        geography: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: null
        status: null
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        sourceCatalogId:
          format: uuid
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        breakingChange:
          type: boolean
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
      required:
      - breakingChange
      - connectionId
      - destinationId
      - name
      - sourceId
      - status
      - syncCatalog
      type: object
    SchemaChange:
      enum:
      - no_change
      - non_breaking
      - breaking
      type: string
    ConnectionSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: null
        schedule:
          units: 0
          timeUnit: minutes
        scheduleType: null
        name: name
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        status: null
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSearch'
        destination:
          $ref: '#/components/schemas/DestinationSearch'
      type: object
    ConnectionReadList:
      example:
        connections:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          prefix: prefix
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceDefinition: null
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          breakingChange: true
          scheduleType: null
          notifySchemaChanges: true
          geography: null
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: null
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: null
                destinationSyncMode: null
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: null
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: null
                destinationSyncMode: null
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: "${SOURCE_NAMESPACE}"
          operationIds:
          - null
          - null
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          nonBreakingChangesPreference: null
          status: null
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          prefix: prefix
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceDefinition: null
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          breakingChange: true
          scheduleType: null
          notifySchemaChanges: true
          geography: null
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: null
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: null
                destinationSyncMode: null
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                supportedSyncModes:
                - null
                - null
                sourceDefinedCursor: true
                jsonSchema: null
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: null
                destinationSyncMode: null
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: "${SOURCE_NAMESPACE}"
          operationIds:
          - null
          - null
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          nonBreakingChangesPreference: null
          status: null
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionRead'
          type: array
      required:
      - connections
      type: object
    ConnectionStatus:
      description: Active means that data is flowing through the connection. Inactive
        means it is not. Deprecated means the connection is off and cannot be re-activated.
        the schema field describes the elements of the schema that will be synced.
      enum:
      - active
      - inactive
      - deprecated
      type: string
    ConnectionSchedule:
      description: "if null, then no schedule is set."
      example:
        units: 0
        timeUnit: minutes
      properties:
        units:
          format: int64
          type: integer
        timeUnit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          type: string
      required:
      - timeUnit
      - units
      type: object
    ConnectionScheduleType:
      description: determine how the schedule data should be interpreted
      enum:
      - manual
      - basic
      - cron
      type: string
    ConnectionScheduleData:
      description: "schedule for when the the connection should run, per the schedule\
        \ type"
      example:
        cron:
          cronExpression: cronExpression
          cronTimeZone: cronTimeZone
        basicSchedule:
          units: 6
          timeUnit: minutes
      properties:
        basicSchedule:
          $ref: '#/components/schemas/ConnectionScheduleData_basicSchedule'
        cron:
          $ref: '#/components/schemas/ConnectionScheduleData_cron'
      type: object
    NamespaceDefinitionType:
      description: Method used for computing final namespace in destination
      enum:
      - source
      - destination
      - customformat
      type: string
    OperationId:
      format: uuid
      type: string
    OperationIdRequestBody:
      example:
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operationId:
          format: uuid
          type: string
      required:
      - operationId
      type: object
    OperationCreate:
      example:
        name: name
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operatorConfiguration
      - workspaceId
      type: object
    OperationUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: null
      properties:
        operationId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operationId
      - operatorConfiguration
      type: object
    WebBackendOperationCreateOrUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operationId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operatorConfiguration
      - workspaceId
      type: object
    OperationRead:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        operationId:
          format: uuid
          type: string
        name:
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operationId
      - operatorConfiguration
      - workspaceId
      type: object
    OperationReadList:
      example:
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          type: array
      required:
      - operations
      type: object
    OperatorConfiguration:
      example:
        webhook:
          webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          dbtCloud:
            accountId: 0
            jobId: 6
          executionUrl: executionUrl
          executionBody: executionBody
          webhookType: dbtCloud
        normalization:
          option: basic
        dbt:
          gitRepoBranch: gitRepoBranch
          dockerImage: dockerImage
          dbtArguments: dbtArguments
          gitRepoUrl: gitRepoUrl
        operatorType: null
      properties:
        operatorType:
          $ref: '#/components/schemas/OperatorType'
        normalization:
          $ref: '#/components/schemas/OperatorNormalization'
        dbt:
          $ref: '#/components/schemas/OperatorDbt'
        webhook:
          $ref: '#/components/schemas/OperatorWebhook'
      required:
      - operatorType
      type: object
    OperatorType:
      enum:
      - normalization
      - dbt
      - webhook
      type: string
    OperatorNormalization:
      example:
        option: basic
      properties:
        option:
          enum:
          - basic
          type: string
      type: object
    OperatorDbt:
      example:
        gitRepoBranch: gitRepoBranch
        dockerImage: dockerImage
        dbtArguments: dbtArguments
        gitRepoUrl: gitRepoUrl
      properties:
        gitRepoUrl:
          type: string
        gitRepoBranch:
          type: string
        dockerImage:
          type: string
        dbtArguments:
          type: string
      required:
      - gitRepoUrl
      type: object
    OperatorWebhook:
      example:
        webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        dbtCloud:
          accountId: 0
          jobId: 6
        executionUrl: executionUrl
        executionBody: executionBody
        webhookType: dbtCloud
      properties:
        webhookConfigId:
          description: The id of the webhook configs to use from the workspace.
          format: uuid
          type: string
        webhookType:
          enum:
          - dbtCloud
          type: string
        dbtCloud:
          $ref: '#/components/schemas/OperatorWebhook_dbtCloud'
        executionUrl:
          deprecated: true
          description: DEPRECATED. Populate dbtCloud instead.
          type: string
        executionBody:
          deprecated: true
          description: DEPRECATED. Populate dbtCloud instead.
          type: string
      type: object
    CheckOperationRead:
      example:
        message: message
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
      required:
      - status
      type: object
    LogType:
      description: type/source of logs produced
      enum:
      - server
      - scheduler
      type: string
    LogsRequestBody:
      example:
        logType: null
      properties:
        logType:
          $ref: '#/components/schemas/LogType'
      required:
      - logType
      type: object
    ActorCatalogWithUpdatedAt:
      description: A source actor catalog with the timestamp it was mostly recently
        updated
      example:
        catalog: "{}"
        updatedAt: 0
      properties:
        updatedAt:
          format: int64
          type: integer
        catalog:
          type: object
      type: object
    AirbyteCatalog:
      description: describes the available schema (catalog).
      example:
        streams:
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            supportedSyncModes:
            - null
            - null
            sourceDefinedCursor: true
            jsonSchema: null
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            suggested: true
            fieldSelectionEnabled: true
            syncMode: null
            destinationSyncMode: null
            selectedFields:
            - fieldPath:
              - fieldPath
              - fieldPath
            - fieldPath:
              - fieldPath
              - fieldPath
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            supportedSyncModes:
            - null
            - null
            sourceDefinedCursor: true
            jsonSchema: null
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            suggested: true
            fieldSelectionEnabled: true
            syncMode: null
            destinationSyncMode: null
            selectedFields:
            - fieldPath:
              - fieldPath
              - fieldPath
            - fieldPath:
              - fieldPath
              - fieldPath
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
      properties:
        streams:
          items:
            $ref: '#/components/schemas/AirbyteStreamAndConfiguration'
          type: array
      required:
      - streams
      type: object
    AirbyteStreamAndConfiguration:
      additionalProperties: false
      description: each stream is split in two parts; the immutable schema from source
        and mutable configuration for destination
      example:
        stream:
          sourceDefinedPrimaryKey:
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          supportedSyncModes:
          - null
          - null
          sourceDefinedCursor: true
          jsonSchema: null
          name: name
          namespace: namespace
          defaultCursorField:
          - defaultCursorField
          - defaultCursorField
        config:
          aliasName: aliasName
          suggested: true
          fieldSelectionEnabled: true
          syncMode: null
          destinationSyncMode: null
          selectedFields:
          - fieldPath:
            - fieldPath
            - fieldPath
          - fieldPath:
            - fieldPath
            - fieldPath
          cursorField:
          - cursorField
          - cursorField
          selected: true
          primaryKey:
          - - primaryKey
            - primaryKey
          - - primaryKey
            - primaryKey
      properties:
        stream:
          $ref: '#/components/schemas/AirbyteStream'
        config:
          $ref: '#/components/schemas/AirbyteStreamConfiguration'
      type: object
    AirbyteStream:
      additionalProperties: false
      description: the immutable schema defined by the source
      example:
        sourceDefinedPrimaryKey:
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        supportedSyncModes:
        - null
        - null
        sourceDefinedCursor: true
        jsonSchema: null
        name: name
        namespace: namespace
        defaultCursorField:
        - defaultCursorField
        - defaultCursorField
      properties:
        name:
          description: Stream's name.
          type: string
        jsonSchema:
          $ref: '#/components/schemas/StreamJsonSchema'
        supportedSyncModes:
          items:
            $ref: '#/components/schemas/SyncMode'
          type: array
        sourceDefinedCursor:
          description: "If the source defines the cursor field, then any other cursor\
            \ field inputs will be ignored. If it does not, either the user_provided\
            \ one is used, or the default one is used as a backup."
          type: boolean
        defaultCursorField:
          description: "Path to the field that will be used to determine if a record\
            \ is new or modified since the last sync. If not provided by the source,\
            \ the end user will have to specify the comparable themselves."
          items:
            type: string
          type: array
        sourceDefinedPrimaryKey:
          description: "If the source defines the primary key, paths to the fields\
            \ that will be used as a primary key. If not provided by the source, the\
            \ end user will have to specify the primary key themselves."
          items:
            items:
              type: string
            type: array
          type: array
        namespace:
          description: Optional Source-defined namespace. Airbyte streams from the
            same sources should have the same namespace. Currently only used by JDBC
            destinations to determine what schema to write to.
          type: string
      required:
      - json_schema
      - name
      type: object
    StreamJsonSchema:
      description: Stream schema using Json Schema specs.
      type: object
    AirbyteStreamConfiguration:
      additionalProperties: false
      description: the mutable part of the stream to configure the destination
      example:
        aliasName: aliasName
        suggested: true
        fieldSelectionEnabled: true
        syncMode: null
        destinationSyncMode: null
        selectedFields:
        - fieldPath:
          - fieldPath
          - fieldPath
        - fieldPath:
          - fieldPath
          - fieldPath
        cursorField:
        - cursorField
        - cursorField
        selected: true
        primaryKey:
        - - primaryKey
          - primaryKey
        - - primaryKey
          - primaryKey
      properties:
        syncMode:
          $ref: '#/components/schemas/SyncMode'
        cursorField:
          description: Path to the field that will be used to determine if a record
            is new or modified since the last sync. This field is REQUIRED if `sync_mode`
            is `incremental`. Otherwise it is ignored.
          items:
            type: string
          type: array
        destinationSyncMode:
          $ref: '#/components/schemas/DestinationSyncMode'
        primaryKey:
          description: Paths to the fields that will be used as primary key. This
            field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it
            is ignored.
          items:
            items:
              type: string
            type: array
          type: array
        aliasName:
          description: Alias name to the stream to be used in the destination
          type: string
        selected:
          description: "If this is true, the stream is selected with all of its properties.\
            \ For new connections, this considers if the stream is suggested or not"
          type: boolean
        suggested:
          description: Does the connector suggest that this stream be enabled by default?
          type: boolean
        fieldSelectionEnabled:
          description: "Whether field selection should be enabled. If this is true,\
            \ only the properties in `selectedFields` will be included."
          type: boolean
        selectedFields:
          description: Paths to the fields that will be included in the configured
            catalog. This must be set if `fieldSelectedEnabled` is set. An empty list
            indicates that no properties will be included.
          items:
            $ref: '#/components/schemas/SelectedFieldInfo'
          type: array
      required:
      - destinationSyncMode
      - syncMode
      type: object
    SelectedFieldInfo:
      description: "Path to a field/column/property in a stream to be selected. For\
        \ example, if the field to be selected is a database column called \"foo\"\
        , this will be [\"foo\"]. Use multiple path elements for nested schemas."
      example:
        fieldPath:
        - fieldPath
        - fieldPath
      properties:
        fieldPath:
          items:
            type: string
          type: array
      type: object
    DataType:
      enum:
      - string
      - number
      - boolean
      - object
      - array
      type: string
    JobId:
      format: int64
      type: integer
    JobConfigType:
      enum:
      - check_connection_source
      - check_connection_destination
      - discover_schema
      - get_spec
      - sync
      - reset_connection
      type: string
    JobListRequestBody:
      example:
        includingJobId: 0
        pagination:
          rowOffset: 1
          pageSize: 6
        configTypes:
        - null
        - null
        configId: configId
      properties:
        configTypes:
          items:
            $ref: '#/components/schemas/JobConfigType'
          type: array
        configId:
          type: string
        includingJobId:
          format: int64
          type: integer
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - configId
      - configTypes
      type: object
    JobIdRequestBody:
      example:
        id: 0
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
      type: object
    JobRead:
      example:
        createdAt: 6
        configId: configId
        startedAt: 5
        id: 0
        configType: null
        resetConfig:
          streamsToReset:
          - name: name
            namespace: namespace
          - name: name
            namespace: namespace
        updatedAt: 1
        status: null
      properties:
        id:
          format: int64
          type: integer
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        startedAt:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        resetConfig:
          $ref: '#/components/schemas/ResetConfig'
      required:
      - configId
      - configType
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    ResetConfig:
      description: contains information about how a reset was configured. only populated
        if the job was a reset.
      example:
        streamsToReset:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
      properties:
        streamsToReset:
          items:
            $ref: '#/components/schemas/StreamDescriptor'
          type: array
      type: object
    StreamDescriptor:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
    JobDebugRead:
      example:
        configId: configId
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: null
          name: name
          icon: icon
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        airbyteVersion: airbyteVersion
        id: 0
        configType: null
        status: null
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: null
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: null
          supportsDbt: true
          name: name
          icon: icon
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: int64
          type: integer
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        airbyteVersion:
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
      required:
      - airbyteVersion
      - configId
      - configType
      - destinationDefinition
      - id
      - sourceDefinition
      - status
      type: object
    WorkflowStateRead:
      example:
        running: true
      properties:
        running:
          type: boolean
      required:
      - running
      type: object
    JobWithAttemptsRead:
      example:
        job:
          createdAt: 6
          configId: configId
          startedAt: 5
          id: 0
          configType: null
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          updatedAt: 1
          status: null
        attempts:
        - totalStats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            partialSuccess: true
          createdAt: 2
          bytesSynced: 3
          endedAt: 9
          streamStats:
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: null
          updatedAt: 7
        - totalStats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            partialSuccess: true
          createdAt: 2
          bytesSynced: 3
          endedAt: 9
          streamStats:
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: null
          updatedAt: 7
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptRead'
          type: array
      type: object
    JobCreatedAt:
      description: epoch time of the latest sync job. null if no sync job has taken
        place.
      format: int64
      type: integer
    JobStatus:
      enum:
      - pending
      - running
      - incomplete
      - failed
      - succeeded
      - cancelled
      type: string
    AttemptRead:
      example:
        totalStats:
          stateMessagesEmitted: 1
          recordsCommitted: 1
          bytesEmitted: 7
          estimatedBytes: 6
          estimatedRecords: 1
          recordsEmitted: 4
        failureSummary:
          failures:
          - retryable: true
            stacktrace: stacktrace
            failureOrigin: null
            failureType: null
            internalMessage: internalMessage
            externalMessage: externalMessage
            timestamp: 7
          - retryable: true
            stacktrace: stacktrace
            failureOrigin: null
            failureType: null
            internalMessage: internalMessage
            externalMessage: externalMessage
            timestamp: 7
          partialSuccess: true
        createdAt: 2
        bytesSynced: 3
        endedAt: 9
        streamStats:
        - stats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          streamNamespace: streamNamespace
          streamName: streamName
        - stats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          streamNamespace: streamNamespace
          streamName: streamName
        id: 5
        recordsSynced: 2
        status: null
        updatedAt: 7
      properties:
        id:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/AttemptStatus'
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
        endedAt:
          format: int64
          type: integer
        bytesSynced:
          format: int64
          type: integer
        recordsSynced:
          format: int64
          type: integer
        totalStats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
          type: array
        failureSummary:
          $ref: '#/components/schemas/AttemptFailureSummary'
      required:
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    AttemptStats:
      example:
        stateMessagesEmitted: 1
        recordsCommitted: 1
        bytesEmitted: 7
        estimatedBytes: 6
        estimatedRecords: 1
        recordsEmitted: 4
      properties:
        recordsEmitted:
          format: int64
          type: integer
        bytesEmitted:
          format: int64
          type: integer
        stateMessagesEmitted:
          format: int64
          type: integer
        recordsCommitted:
          format: int64
          type: integer
        estimatedRecords:
          format: int64
          type: integer
        estimatedBytes:
          format: int64
          type: integer
      type: object
    AttemptStreamStats:
      example:
        stats:
          stateMessagesEmitted: 1
          recordsCommitted: 1
          bytesEmitted: 7
          estimatedBytes: 6
          estimatedRecords: 1
          recordsEmitted: 4
        streamNamespace: streamNamespace
        streamName: streamName
      properties:
        streamName:
          type: string
        streamNamespace:
          type: string
        stats:
          $ref: '#/components/schemas/AttemptStats'
      required:
      - stats
      - streamName
      type: object
    AttemptFailureSummary:
      example:
        failures:
        - retryable: true
          stacktrace: stacktrace
          failureOrigin: null
          failureType: null
          internalMessage: internalMessage
          externalMessage: externalMessage
          timestamp: 7
        - retryable: true
          stacktrace: stacktrace
          failureOrigin: null
          failureType: null
          internalMessage: internalMessage
          externalMessage: externalMessage
          timestamp: 7
        partialSuccess: true
      properties:
        failures:
          items:
            $ref: '#/components/schemas/AttemptFailureReason'
          type: array
        partialSuccess:
          description: "True if the number of committed records for this attempt was\
            \ greater than 0. False if 0 records were committed. If not set, the number\
            \ of committed records is unknown."
          type: boolean
      required:
      - failures
      type: object
    AttemptFailureReason:
      example:
        retryable: true
        stacktrace: stacktrace
        failureOrigin: null
        failureType: null
        internalMessage: internalMessage
        externalMessage: externalMessage
        timestamp: 7
      properties:
        failureOrigin:
          $ref: '#/components/schemas/AttemptFailureOrigin'
        failureType:
          $ref: '#/components/schemas/AttemptFailureType'
        externalMessage:
          type: string
        internalMessage:
          type: string
        stacktrace:
          type: string
        retryable:
          description: "True if it is known that retrying may succeed, e.g. for a\
            \ transient failure. False if it is known that a retry will not succeed,\
            \ e.g. for a configuration issue. If not set, retryable status is not\
            \ well known."
          type: boolean
        timestamp:
          format: int64
          type: integer
      required:
      - timestamp
      type: object
    AttemptFailureOrigin:
      description: "Indicates where the error originated. If not set, the origin of\
        \ error is not well known."
      enum:
      - source
      - destination
      - replication
      - persistence
      - normalization
      - dbt
      - airbyte_platform
      - unknown
      type: string
    AttemptFailureType:
      description: "Categorizes well known errors into types for programmatic handling.\
        \ If not set, the type of error is not well known."
      enum:
      - config_error
      - system_error
      - manual_cancellation
      type: string
    AttemptStatus:
      enum:
      - running
      - failed
      - succeeded
      type: string
    JobReadList:
      example:
        totalJobCount: 0
        jobs:
        - job:
            createdAt: 6
            configId: configId
            startedAt: 5
            id: 0
            configType: null
            resetConfig:
              streamsToReset:
              - name: name
                namespace: namespace
              - name: name
                namespace: namespace
            updatedAt: 1
            status: null
          attempts:
          - totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          - totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
        - job:
            createdAt: 6
            configId: configId
            startedAt: 5
            id: 0
            configType: null
            resetConfig:
              streamsToReset:
              - name: name
                namespace: namespace
              - name: name
                namespace: namespace
            updatedAt: 1
            status: null
          attempts:
          - totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          - totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/JobWithAttemptsRead'
          type: array
        totalJobCount:
          description: the total count of jobs for the specified connection
          format: int64
          type: integer
      required:
      - jobs
      - totalJobCount
      type: object
    JobInfoRead:
      example:
        job:
          createdAt: 6
          configId: configId
          startedAt: 5
          id: 0
          configType: null
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          updatedAt: 1
          status: null
        attempts:
        - attempt:
            totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          type: array
      required:
      - attempts
      - job
      type: object
    JobInfoLightRead:
      example:
        job:
          createdAt: 6
          configId: configId
          startedAt: 5
          id: 0
          configType: null
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          updatedAt: 1
          status: null
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
      required:
      - job
      type: object
    JobOptionalRead:
      example:
        job:
          createdAt: 6
          configId: configId
          startedAt: 5
          id: 0
          configType: null
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          updatedAt: 1
          status: null
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
      type: object
    JobDebugInfoRead:
      example:
        workflowState:
          running: true
        job:
          configId: configId
          sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: null
            name: name
            icon: icon
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          airbyteVersion: airbyteVersion
          id: 0
          configType: null
          status: null
          destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: null
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: null
            supportsDbt: true
            name: name
            icon: icon
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attempts:
        - attempt:
            totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            totalStats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: null
                failureType: null
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 7
              partialSuccess: true
            createdAt: 2
            bytesSynced: 3
            endedAt: 9
            streamStats:
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                stateMessagesEmitted: 1
                recordsCommitted: 1
                bytesEmitted: 7
                estimatedBytes: 6
                estimatedRecords: 1
                recordsEmitted: 4
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: null
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        job:
          $ref: '#/components/schemas/JobDebugRead'
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          type: array
        workflowState:
          $ref: '#/components/schemas/WorkflowStateRead'
      required:
      - attempts
      - job
      type: object
    AttemptInfoRead:
      example:
        attempt:
          totalStats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: null
              failureType: null
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 7
            partialSuccess: true
          createdAt: 2
          bytesSynced: 3
          endedAt: 9
          streamStats:
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              stateMessagesEmitted: 1
              recordsCommitted: 1
              bytesEmitted: 7
              estimatedBytes: 6
              estimatedRecords: 1
              recordsEmitted: 4
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: null
          updatedAt: 7
        logs:
          logLines:
          - logLines
          - logLines
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptRead'
        logs:
          $ref: '#/components/schemas/LogRead'
      required:
      - attempt
      - logs
      type: object
    LogRead:
      example:
        logLines:
        - logLines
        - logLines
      properties:
        logLines:
          items:
            type: string
          type: array
      required:
      - logLines
      type: object
    SynchronousJobRead:
      example:
        createdAt: 0
        connectorConfigurationUpdated: false
        configId: configId
        endedAt: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configType: null
        logs:
          logLines:
          - logLines
          - logLines
        succeeded: true
      properties:
        id:
          format: uuid
          type: string
        configType:
          $ref: '#/components/schemas/JobConfigType'
        configId:
          description: only present if a config id was provided.
          type: string
        createdAt:
          format: int64
          type: integer
        endedAt:
          format: int64
          type: integer
        succeeded:
          type: boolean
        connectorConfigurationUpdated:
          default: false
          type: boolean
        logs:
          $ref: '#/components/schemas/LogRead'
      required:
      - configType
      - createdAt
      - endedAt
      - id
      - succeeded
      type: object
    Pagination:
      example:
        rowOffset: 1
        pageSize: 6
      properties:
        pageSize:
          type: integer
        rowOffset:
          type: integer
      type: object
    HealthCheckRead:
      example:
        available: true
      properties:
        available:
          type: boolean
      required:
      - available
      type: object
    CheckConnectionRead:
      example:
        message: message
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: null
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
        status: succeeded
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        message:
          type: string
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      - status
      type: object
    ConnectionState:
      description: "Contains the state for a connection. The stateType field identifies\
        \ what type of state it is. Only the field corresponding to that type will\
        \ be set, the rest will be null. If stateType=not_set, then none of the fields\
        \ will be set."
      example:
        globalState:
          shared_state: null
          streamStates:
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: null
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: null
        stateType: null
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        streamState:
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: null
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: null
        state: null
      properties:
        stateType:
          $ref: '#/components/schemas/ConnectionStateType'
        connectionId:
          format: uuid
          type: string
        state:
          $ref: '#/components/schemas/StateBlob'
        streamState:
          items:
            $ref: '#/components/schemas/StreamState'
          type: array
        globalState:
          $ref: '#/components/schemas/GlobalState'
      required:
      - connectionId
      - stateType
      type: object
    StateBlob:
      type: object
    StreamState:
      example:
        streamDescriptor:
          name: name
          namespace: namespace
        streamState: null
      properties:
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        streamState:
          $ref: '#/components/schemas/StateBlob'
      required:
      - streamDescriptor
      type: object
    GlobalState:
      example:
        shared_state: null
        streamStates:
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: null
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: null
      properties:
        shared_state:
          $ref: '#/components/schemas/StateBlob'
        streamStates:
          items:
            $ref: '#/components/schemas/StreamState'
          type: array
      required:
      - streamStates
      type: object
    ConnectionStateType:
      enum:
      - global
      - stream
      - legacy
      - not_set
      type: string
    CatalogDiff:
      description: Describes the difference between two Airbyte catalogs.
      example:
        transforms:
        - streamDescriptor:
            name: name
            namespace: namespace
          transformType: add_stream
          updateStream:
          - updateFieldSchema:
              oldSchema: null
              newSchema: null
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: null
            transformType: add_field
            removeField:
              schema: null
            breaking: true
          - updateFieldSchema:
              oldSchema: null
              newSchema: null
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: null
            transformType: add_field
            removeField:
              schema: null
            breaking: true
        - streamDescriptor:
            name: name
            namespace: namespace
          transformType: add_stream
          updateStream:
          - updateFieldSchema:
              oldSchema: null
              newSchema: null
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: null
            transformType: add_field
            removeField:
              schema: null
            breaking: true
          - updateFieldSchema:
              oldSchema: null
              newSchema: null
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: null
            transformType: add_field
            removeField:
              schema: null
            breaking: true
      properties:
        transforms:
          description: list of stream transformations. order does not matter.
          items:
            $ref: '#/components/schemas/StreamTransform'
          type: array
      required:
      - transforms
      type: object
    StreamTransform:
      example:
        streamDescriptor:
          name: name
          namespace: namespace
        transformType: add_stream
        updateStream:
        - updateFieldSchema:
            oldSchema: null
            newSchema: null
          fieldName:
          - fieldName
          - fieldName
          addField:
            schema: null
          transformType: add_field
          removeField:
            schema: null
          breaking: true
        - updateFieldSchema:
            oldSchema: null
            newSchema: null
          fieldName:
          - fieldName
          - fieldName
          addField:
            schema: null
          transformType: add_field
          removeField:
            schema: null
          breaking: true
      properties:
        transformType:
          enum:
          - add_stream
          - remove_stream
          - update_stream
          type: string
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        updateStream:
          description: list of field transformations. order does not matter.
          items:
            $ref: '#/components/schemas/FieldTransform'
          type: array
      required:
      - streamDescriptor
      - transformType
      type: object
    FieldTransform:
      description: Describes the difference between two Streams.
      example:
        updateFieldSchema:
          oldSchema: null
          newSchema: null
        fieldName:
        - fieldName
        - fieldName
        addField:
          schema: null
        transformType: add_field
        removeField:
          schema: null
        breaking: true
      properties:
        transformType:
          enum:
          - add_field
          - remove_field
          - update_field_schema
          type: string
        fieldName:
          description: A field name is a list of strings that form the path to the
            field.
          items:
            type: string
          type: array
        breaking:
          type: boolean
        addField:
          $ref: '#/components/schemas/FieldAdd'
        removeField:
          $ref: '#/components/schemas/FieldRemove'
        updateFieldSchema:
          $ref: '#/components/schemas/FieldSchemaUpdate'
      required:
      - breaking
      - fieldName
      - transformType
      type: object
    FieldAdd:
      example:
        schema: null
      properties:
        schema:
          $ref: '#/components/schemas/FieldSchema'
      type: object
    FieldRemove:
      example:
        schema: null
      properties:
        schema:
          $ref: '#/components/schemas/FieldSchema'
      type: object
    FieldSchemaUpdate:
      example:
        oldSchema: null
        newSchema: null
      properties:
        oldSchema:
          $ref: '#/components/schemas/FieldSchema'
        newSchema:
          $ref: '#/components/schemas/FieldSchema'
      required:
      - newSchema
      - oldSchema
      type: object
    FieldName:
      description: A field name is a list of strings that form the path to the field.
      items:
        type: string
      type: array
    FieldSchema:
      description: JSONSchema representation of the field
      type: object
    ActorDefinitionResourceRequirements:
      additionalProperties: false
      description: "actor definition specific resource requirements. if default is\
        \ set, these are the requirements that should be set for ALL jobs run for\
        \ this actor definition. it is overriden by the job type specific configurations.\
        \ if not set, the platform will use defaults. these values will be overriden\
        \ by configuration at the connection level."
      example:
        default:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        jobSpecific:
        - resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobType: null
        - resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobType: null
      properties:
        default:
          $ref: '#/components/schemas/ResourceRequirements'
        jobSpecific:
          items:
            $ref: '#/components/schemas/JobTypeResourceLimit'
          type: array
      type: object
    NormalizationDestinationDefinitionConfig:
      additionalProperties: false
      description: describes a normalization config for destination definition
      example:
        normalizationIntegrationType: normalizationIntegrationType
        normalizationRepository: normalizationRepository
        normalizationTag: normalizationTag
        supported: false
      properties:
        supported:
          default: false
          description: whether the destination definition supports normalization.
          type: boolean
        normalizationRepository:
          description: a field indicating the name of the repository to be used for
            normalization. If the value of the flag is NULL - normalization is not
            used.
          type: string
        normalizationTag:
          description: a field indicating the tag of the docker repository to be used
            for normalization.
          type: string
        normalizationIntegrationType:
          description: a field indicating the type of integration dialect to use for
            normalization.
          type: string
      required:
      - supported
      type: object
    JobTypeResourceLimit:
      additionalProperties: false
      description: "sets resource requirements for a specific job type for an actor\
        \ definition. these values override the default, if both are set."
      example:
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        jobType: null
      properties:
        jobType:
          $ref: '#/components/schemas/JobType'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - jobType
      - resourceRequirements
      type: object
    JobType:
      description: enum that describes the different types of jobs that the platform
        runs.
      enum:
      - get_spec
      - check_connection
      - discover_schema
      - sync
      - reset_connection
      - connection_updater
      - replicate
      type: string
    ResourceRequirements:
      description: optional resource requirements to run workers (blank for unbounded
        allocations)
      example:
        cpu_limit: cpu_limit
        memory_request: memory_request
        memory_limit: memory_limit
        cpu_request: cpu_request
      properties:
        cpu_request:
          type: string
        cpu_limit:
          type: string
        memory_request:
          type: string
        memory_limit:
          type: string
      type: object
    DbMigrationState:
      enum:
      - pending
      - above_target
      - below_baseline
      - baseline
      - ignored
      - missing_success
      - missing_failed
      - success
      - undone
      - available
      - failed
      - out_of_order
      - future_success
      - future_failed
      - outdated
      - superseded
      - deleted
      type: string
    DbMigrationRead:
      properties:
        migrationType:
          type: string
        migrationVersion:
          type: string
        migrationDescription:
          type: string
        migrationState:
          $ref: '#/components/schemas/DbMigrationState'
        migratedBy:
          type: string
        migratedAt:
          format: int64
          type: integer
        migrationScript:
          type: string
      required:
      - migrationDescription
      - migrationType
      - migrationVersion
      type: object
    DbMigrationReadList:
      properties:
        migrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
      type: object
    DbMigrationExecutionRead:
      properties:
        initialVersion:
          type: string
        targetVersion:
          type: string
        executedMigrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
      type: object
    OAuthConfiguration:
      description: The values required to configure OAuth flows. The schema for this
        must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
        schema.
    OAuthInputConfiguration:
      $ref: '#/components/schemas/OAuthConfiguration'
    AdvancedAuth:
      example:
        predicateValue: predicateValue
        oauthConfigSpecification:
          completeOAuthServerOutputSpecification: null
          completeOAuthServerInputSpecification: null
          completeOAuthOutputSpecification: null
          oauthUserInputFromConnectorConfigSpecification: null
        predicateKey:
        - predicateKey
        - predicateKey
        authFlowType: oauth2.0
      properties:
        authFlowType:
          enum:
          - oauth2.0
          - oauth1.0
          type: string
        predicateKey:
          description: Json Path to a field in the connectorSpecification that should
            exist for the advanced auth to be applicable.
          items:
            type: string
          type: array
        predicateValue:
          description: Value of the predicate_key fields for the advanced auth to
            be applicable.
          type: string
        oauthConfigSpecification:
          $ref: '#/components/schemas/OAuthConfigSpecification'
      type: object
    OAuthConfigSpecification:
      example:
        completeOAuthServerOutputSpecification: null
        completeOAuthServerInputSpecification: null
        completeOAuthOutputSpecification: null
        oauthUserInputFromConnectorConfigSpecification: null
      properties:
        oauthUserInputFromConnectorConfigSpecification:
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthOutputSpecification:
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthServerInputSpecification:
          $ref: '#/components/schemas/OAuthConfiguration'
        completeOAuthServerOutputSpecification:
          $ref: '#/components/schemas/OAuthConfiguration'
      type: object
    SourceOauthConsentRequest:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redirectUrl: redirectUrl
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: null
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthConfiguration'
        sourceId:
          format: uuid
          type: string
      required:
      - redirectUrl
      - sourceDefinitionId
      - workspaceId
      type: object
    DestinationOauthConsentRequest:
      example:
        redirectUrl: redirectUrl
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: null
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: The url to redirect to after getting the user consent
          type: string
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthConfiguration'
        destinationId:
          format: uuid
          type: string
      required:
      - destinationDefinitionId
      - redirectUrl
      - workspaceId
      type: object
    OAuthConsentRead:
      example:
        consentUrl: consentUrl
      properties:
        consentUrl:
          type: string
      required:
      - consentUrl
      type: object
    CompleteSourceOauthRequest:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redirectUrl: redirectUrl
        queryParams:
          key: ""
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: null
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: "When completing OAuth flow to gain an access token, some API\
            \ sometimes requires to verify that the app re-send the redirectUrl that\
            \ was used when consent was given."
          type: string
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          type: object
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthConfiguration'
        sourceId:
          format: uuid
          type: string
      required:
      - sourceDefinitionId
      - workspaceId
      type: object
    CompleteDestinationOAuthRequest:
      example:
        redirectUrl: redirectUrl
        queryParams:
          key: ""
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: null
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
        redirectUrl:
          description: "When completing OAuth flow to gain an access token, some API\
            \ sometimes requires to verify that the app re-send the redirectUrl that\
            \ was used when consent was given."
          type: string
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          type: object
        oAuthInputConfiguration:
          $ref: '#/components/schemas/OAuthConfiguration'
        destinationId:
          format: uuid
          type: string
      required:
      - destinationDefinitionId
      - workspaceId
      type: object
    CompleteOAuthResponse:
      additionalProperties: true
      type: object
    SetInstancewideSourceOauthParamsRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: ""
      properties:
        sourceDefinitionId:
          format: uuid
          type: string
        params:
          additionalProperties: true
          type: object
      required:
      - params
      - sourceDefinitionId
      type: object
    SetInstancewideDestinationOauthParamsRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: ""
      properties:
        destinationDefinitionId:
          format: uuid
          type: string
        params:
          additionalProperties: true
          type: object
      required:
      - destinationDefinitionId
      - params
      type: object
    WebBackendCheckUpdatesRead:
      description: Summary of source and destination definitions that could be updated
      example:
        destinationDefinitions: 0
        sourceDefinitions: 6
      properties:
        destinationDefinitions:
          type: integer
        sourceDefinitions:
          type: integer
      required:
      - destinationDefinitions
      - sourceDefinitions
      type: object
    WebBackendConnectionListRequestBody:
      example:
        sourceId:
        - null
        - null
        destinationId:
        - null
        - null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          type: string
        sourceId:
          items:
            $ref: '#/components/schemas/SourceId'
          type: array
        destinationId:
          items:
            $ref: '#/components/schemas/DestinationId'
          type: array
      required:
      - workspaceId
      type: object
    WebBackendConnectionListItem:
      description: Information about a connection that shows up in the connection
        list view.
      example:
        scheduleType: null
        latestSyncJobCreatedAt: 0
        latestSyncJobStatus: null
        name: name
        destination:
          destinationName: destinationName
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isSyncing: true
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        schemaChange: null
        status: null
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        source:
          $ref: '#/components/schemas/SourceSnippetRead'
        destination:
          $ref: '#/components/schemas/DestinationSnippetRead'
        latestSyncJobCreatedAt:
          description: epoch time of the latest sync job. null if no sync job has
            taken place.
          format: int64
          type: integer
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        isSyncing:
          type: boolean
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
      required:
      - connectionId
      - destination
      - isSyncing
      - name
      - schemaChange
      - source
      - status
      type: object
    WebBackendConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latestSyncJobCreatedAt: 0
        prefix: prefix
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          icon: icon
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isSyncing: true
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          icon: icon
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        catalogDiff:
          transforms:
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
            - updateFieldSchema:
                oldSchema: null
                newSchema: null
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: null
              transformType: add_field
              removeField:
                schema: null
              breaking: true
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: null
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notifySchemaChanges: true
        geography: null
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        schemaChange: null
        nonBreakingChangesPreference: null
        namespaceDefinition: null
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        scheduleType: null
        latestSyncJobStatus: null
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              supportedSyncModes:
              - null
              - null
              sourceDefinedCursor: true
              jsonSchema: null
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: null
              destinationSyncMode: null
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operationIds:
        - null
        - null
        status: null
      properties:
        connectionId:
          format: uuid
          type: string
        name:
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          type: string
        sourceId:
          format: uuid
          type: string
        destinationId:
          format: uuid
          type: string
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          type: array
        source:
          $ref: '#/components/schemas/SourceRead'
        destination:
          $ref: '#/components/schemas/DestinationRead'
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          type: array
        latestSyncJobCreatedAt:
          description: epoch time of the latest sync job. null if no sync job has
            taken place.
          format: int64
          type: integer
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        isSyncing:
          type: boolean
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        catalogId:
          format: uuid
          type: string
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        geography:
          $ref: '#/components/schemas/Geography'
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
        notifySchemaChanges:
          type: boolean
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
      required:
      - connectionId
      - destination
      - destinationId
      - isSyncing
      - name
      - nonBreakingChangesPreference
      - notifySchemaChanges
      - schemaChange
      - source
      - sourceId
      - status
      - syncCatalog
      type: object
    NonBreakingChangesPreference:
      enum:
      - ignore
      - disable
      type: string
    WebBackendConnectionReadList:
      example:
        connections:
        - scheduleType: null
          latestSyncJobCreatedAt: 0
          latestSyncJobStatus: null
          name: name
          destination:
            destinationName: destinationName
            name: name
            icon: icon
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            icon: icon
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          schemaChange: null
          status: null
        - scheduleType: null
          latestSyncJobCreatedAt: 0
          latestSyncJobStatus: null
          name: name
          destination:
            destinationName: destinationName
            name: name
            icon: icon
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            icon: icon
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          schemaChange: null
          status: null
      properties:
        connections:
          items:
            $ref: '#/components/schemas/WebBackendConnectionListItem'
          type: array
      required:
      - connections
      type: object
    SyncMode:
      enum:
      - full_refresh
      - incremental
      type: string
    DestinationSyncMode:
      enum:
      - append
      - overwrite
      - append_dedup
      type: string
    AirbyteArchive:
      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database
      format: binary
      type: string
    ImportRead:
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        reason:
          type: string
      required:
      - status
      type: object
    ResourceId:
      format: uuid
      type: string
    UploadRead:
      properties:
        status:
          enum:
          - succeeded
          - failed
          type: string
        resourceId:
          format: uuid
          type: string
      required:
      - status
      type: object
    ImportRequestBody:
      properties:
        resourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          type: string
      required:
      - resourceId
      - workspaceId
      type: object
    AttemptNumber:
      format: int32
      type: integer
    WorkflowId:
      type: string
    SetWorkflowInAttemptRequestBody:
      example:
        attemptNumber: 6
        jobId: 0
        processingTaskQueue: processingTaskQueue
        workflowId: workflowId
      properties:
        jobId:
          format: int64
          type: integer
        attemptNumber:
          format: int32
          type: integer
        workflowId:
          type: string
        processingTaskQueue:
          default: ""
          type: string
      required:
      - attemptNumber
      - jobId
      - workflowId
      type: object
    SaveStatsRequestBody:
      example:
        attemptNumber: 6
        jobId: 0
        stats:
          stateMessagesEmitted: 1
          recordsCommitted: 1
          bytesEmitted: 7
          estimatedBytes: 6
          estimatedRecords: 1
          recordsEmitted: 4
        streamStats:
        - stats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          streamNamespace: streamNamespace
          streamName: streamName
        - stats:
            stateMessagesEmitted: 1
            recordsCommitted: 1
            bytesEmitted: 7
            estimatedBytes: 6
            estimatedRecords: 1
            recordsEmitted: 4
          streamNamespace: streamNamespace
          streamName: streamName
      properties:
        jobId:
          format: int64
          type: integer
        attemptNumber:
          format: int32
          type: integer
        stats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
          type: array
      required:
      - attemptNumber
      - jobId
      - stats
      type: object
    InternalOperationResult:
      example:
        succeeded: true
      properties:
        succeeded:
          type: boolean
      required:
      - succeeded
      type: object
    DiscoverCatalogResult:
      example:
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        catalogId:
          format: uuid
          type: string
      required:
      - catalogId
      type: object
    AttemptNormalizationStatusReadList:
      example:
        attemptNormalizationStatuses:
        - attemptNumber: 0
          recordsCommitted: 6
          hasRecordsCommitted: true
          hasNormalizationFailed: true
        - attemptNumber: 0
          recordsCommitted: 6
          hasRecordsCommitted: true
          hasNormalizationFailed: true
      properties:
        attemptNormalizationStatuses:
          items:
            $ref: '#/components/schemas/AttemptNormalizationStatusRead'
          type: array
      type: object
    AttemptNormalizationStatusRead:
      example:
        attemptNumber: 0
        recordsCommitted: 6
        hasRecordsCommitted: true
        hasNormalizationFailed: true
      properties:
        attemptNumber:
          format: int32
          type: integer
        hasRecordsCommitted:
          type: boolean
        recordsCommitted:
          format: int64
          type: integer
        hasNormalizationFailed:
          type: boolean
      type: object
    InvalidInputProperty:
      properties:
        propertyPath:
          type: string
        invalidValue:
          type: string
        message:
          type: string
      required:
      - propertyPath
      type: object
    NotFoundKnownExceptionInfo:
      properties:
        id:
          type: string
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          type: array
      required:
      - message
      type: object
    KnownExceptionInfo:
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        rootCauseExceptionClassName:
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          type: array
      required:
      - message
      type: object
    InvalidInputExceptionInfo:
      properties:
        message:
          type: string
        exceptionClassName:
          type: string
        exceptionStack:
          items:
            type: string
          type: array
        validationErrors:
          items:
            $ref: '#/components/schemas/InvalidInputProperty'
          type: array
      required:
      - message
      - validationErrors
      type: object
    ConnectionScheduleData_basicSchedule:
      example:
        units: 6
        timeUnit: minutes
      properties:
        timeUnit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          type: string
        units:
          format: int64
          type: integer
      required:
      - timeUnit
      - units
      type: object
    ConnectionScheduleData_cron:
      example:
        cronExpression: cronExpression
        cronTimeZone: cronTimeZone
      properties:
        cronExpression:
          type: string
        cronTimeZone:
          type: string
      required:
      - cronExpression
      - cronTimeZone
      type: object
    OperatorWebhook_dbtCloud:
      example:
        accountId: 0
        jobId: 6
      properties:
        accountId:
          description: The account id associated with the job
          type: integer
        jobId:
          description: The job id associated with the job
          type: integer
      required:
      - accountId
      - jobId
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

